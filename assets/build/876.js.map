{"version":3,"sources":["webpack://advanced-custom-post-type-lite/./assets/src/App/components/Boolean/index.js","webpack://advanced-custom-post-type-lite/./assets/src/App/components/DashiconSelector/DashiconSelectorItem.js","webpack://advanced-custom-post-type-lite/./assets/src/App/components/DashiconSelector/index.js","webpack://advanced-custom-post-type-lite/./assets/src/App/components/ElementIcon/index.js","webpack://advanced-custom-post-type-lite/./assets/src/App/components/Forms/IconPicker.js","webpack://advanced-custom-post-type-lite/./assets/src/App/components/Modal/index.js","webpack://advanced-custom-post-type-lite/./assets/src/App/constants/postLabels.js","webpack://advanced-custom-post-type-lite/./assets/src/App/pages/SaveCustomPostType/Steps/BasicStep.js","webpack://advanced-custom-post-type-lite/./assets/src/App/pages/SaveCustomPostType/Steps/LabelsStep.js","webpack://advanced-custom-post-type-lite/./assets/src/App/pages/SaveCustomPostType/Steps/SettingsStep.js","webpack://advanced-custom-post-type-lite/./assets/src/App/pages/SaveCustomPostType/index.js"],"names":["Boolean","status","icon","color","propTypes","PropTypes","bool","isRequired","DashiconSelectorItem","callback","string","func","DashiconSelector","type","searchResults","setSearchResults","ICONIFY_API_ROOT","searchIcons","search","fetch","then","res","json","icons","fetchIcons","uncategorized","map","push","openWpMedia","wp","media","alert","image","title","library","multiple","on","e","uploaded_image","state","get","first","image_url","toJSON","url","open","preventDefault","stopPropagation","currentTarget","value","length","searchResult","ElementIcon","includes","IconPicker","id","validate","register","description","defaultValue","errors","error","setIcon","modalVisible","setModalVisible","iconPicker","setIconPicker","handleCallback","styleVariants","SECONDARY","message","array","Modal","size","visible","textAlign","padding","buttons","testId","children","didMountRef","closed","setClosed","node","current","button","document","getElementById","number","arrayOf","Button","oneOf","postLabels","label","BasicStep","crumbs","headings","stepActive","setStepActive","handleSubmit","edit","formValues","fetchCustomPostTypes","data","editor","thumbnail","excerpt","author","trackbacks","custom_fields","comments","revisions","page_attributes","post_formats","supports","setSupports","mode","submit","setValue","formState","support_0","support_1","support_2","support_3","support_4","support_5","support_6","support_7","support_8","support_9","support_10","post_name","singular_label","plural_label","name","singular","plural","handlePostNameChange","onSubmit","actions","isPostTypeNameValid","asyncIsPostTypeNameValid","required","shape","object","LabelsStep","labels","r","menu_name","all_items","add_new","add_new_item","edit_item","new_item","view_item","view_items","search_item","not_found","not_found_in_trash","parent_item_colon","featured_image","set_featured_image","remove_featured_image","use_featured_image","archives","insert_into_item","uploaded_to_this_item","filter_items_list","items_list_navigation","items_list","filter_by_date","item_published","item_published_privately","item_reverted_to_draft","item_scheduled","item_updated","SettingsStep","isWPGraphQLActive","loading","settings","defaultValues","public","publicly_queryable","show_ui","show_in_menu","show_in_nav_menus","show_in_admin_bar","show_in_rest","rest_base","menu_position","capability_type","has_archive","rewrite","custom_rewrite","query_var","custom_query_var","isValid","watch","show_in_graphql","graphql_single_name","graphql_plural_name","showInGraphql","graphqlSingleName","graphqlPluralName","handleGraphQLSingleNameChange","single_name","handleGraphQLPluralNameChange","plural_name","PRIMARY","validWPGraphQLName","hierarchical","maxLength","min","max","SaveCustomPostType","dispatch","saveCustomPostType","fetchLoading","postType","step","setEdit","fetchError","setFetchError","parseInt","setFormValues","setIsWPGraphQLActive","navigate","catch","console","err","payload","link","index","success","toast"],"mappings":"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","file":"876.js","sourcesContent":["import React from 'react';\nimport {Icon} from \"@iconify/react\";\nimport PropTypes from 'prop-types';\n\nconst Boolean = ({status}) => {\n\n    const icon = status ? 'bx:bx-check' : 'bx:bx-x';\n    const color = status ? '#02C39A' : '#F94144';\n\n    return <Icon icon={icon} color={color} width=\"18px\" />\n};\n\nBoolean.propTypes = {\n    status: PropTypes.bool.isRequired\n};\n\nexport default Boolean;","import React from 'react';\nimport {Icon} from \"@iconify/react\";\nimport PropTypes from 'prop-types';\n\nconst DashiconSelectorItem = ({icon, callback}) => {\n\n    return (\n        <div\n            title={icon}\n            className=\"icon\"\n            onClick={()=>{\n                callback(icon);\n            }}\n        >\n            <Icon icon={icon} width=\"24px\"/>\n        </div>\n    );\n};\n\nDashiconSelectorItem.propTypes = {\n    icon: PropTypes.string.isRequired,\n    callback: PropTypes.func,\n};\n\nexport default DashiconSelectorItem;","import React, {useEffect, useState} from 'react';\nimport useTranslation from \"../../hooks/useTranslation\";\nimport DashiconSelectorItem from \"./DashiconSelectorItem\";\nimport PropTypes from 'prop-types';\n\nconst DashiconSelector = ({type, callback}) => {\n\n    const [searchResults, setSearchResults] = useState([]);\n    const ICONIFY_API_ROOT = 'https://api.iconify.design/';\n\n    /**\n     * Filter icons\n     * @param search\n     */\n    const searchIcons = (search) => {\n        fetch(`${ICONIFY_API_ROOT}search?query=${search}&prefix=dashicons&limit=96`)\n            .then(res => res.json())\n            .then(res => {\n                setSearchResults(res.icons);\n            })\n        ;\n    };\n\n    /**\n     * Fetch all icons\n     */\n    const fetchIcons = () => {\n        fetch(`${ICONIFY_API_ROOT}collection?prefix=dashicons`)\n            .then(res => res.json())\n            .then(res => {\n                let icons = [];\n\n                res.uncategorized.map((icon)=>{\n                    icons.push(`dashicons-${icon}`);\n                });\n\n                setSearchResults(icons);\n            })\n        ;\n    };\n\n    /**\n     * Open WP Media and select image\n     */\n    const openWpMedia = () => {\n\n        if (!wp || !wp.media) {\n            alert(useTranslation('The media gallery is not available. You must admin_enqueue this function: wp_enqueue_media()'));\n            return;\n        }\n\n        const image = wp.media( {\n            title: useTranslation('Upload an Image'),\n            library: {\n                type: [ 'image' ]\n            },\n            multiple: false\n        });\n\n        image.on( 'select', function ( e ) {\n            const uploaded_image = image.state().get( 'selection' ).first();\n            const image_url = uploaded_image.toJSON().url;\n            callback(image_url);\n        } );\n\n        image.open();\n    };\n\n    useEffect(()=>{\n        fetchIcons();\n    }, []);\n\n    if (type === 'image') {\n        return (\n            <a\n                href=\"#\"\n                className=\"mt-1 acpt-btn acpt-btn-primary-o acpt-btn-block\"\n                onClick={e => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    openWpMedia();\n                }}\n            >\n                {useTranslation(\"Upload an Image\")}\n            </a>\n        );\n    }\n\n    return (\n        <React.Fragment>\n            <div className=\"form-group\">\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder={useTranslation(\"Type at least 3 characters to start searching.\")}\n                    onChange={async e => {\n                        const search = e.currentTarget.value;\n\n                        if (search.length === 0) {\n                            fetchIcons();\n                        }\n\n                        if (search.length >= 3) {\n                            searchIcons(search);\n                        }\n                    }}\n                />\n            </div>\n            {searchResults.length > 0 && (\n                <div\n                    className=\"mt-24 icon-picker-wrapper\"\n                    data-cy=\"icon-picker-wrapper\"\n                >\n                    {searchResults.map((searchResult) => (\n                        <DashiconSelectorItem icon={searchResult} callback={callback}/>\n                    ))}\n                </div>\n            )}\n\n        </React.Fragment>\n    );\n};\n\nDashiconSelector.propTypes = {\n    type: PropTypes.string.isRequired,\n    callback: PropTypes.func,\n};\n\nexport default DashiconSelector;","import React from 'react';\nimport {Icon} from \"@iconify/react\";\nimport PropTypes from 'prop-types';\n\nconst ElementIcon = ({value}) => {\n\n    // render image if values starts by http / https\n    if(value && value.includes(\"http://\") || value && value.includes(\"https://\")){\n        return (\n            <img src={value} width={18}  alt=\"\" />\n        );\n    }\n\n    // add dashicons: for retro-compatibility\n    if(value && !value.includes(\"dashicons\")){\n        return (\n            <Icon icon={`dashicons:${value}`} color=\"#777\" width=\"18px\" />\n        );\n    }\n\n    return (\n        <Icon icon={value} color=\"#777\" width=\"18px\" />\n    );\n};\n\nElementIcon.propTypes = {\n    value: PropTypes.string.isRequired\n};\n\nexport default ElementIcon;","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport useTranslation from \"../../hooks/useTranslation\";\nimport Button from \"../Button\";\nimport {styleVariants} from \"../../constants/styles\";\nimport DashiconSelector from \"../DashiconSelector\";\nimport Modal from \"../../components/Modal\";\nimport ElementIcon from \"../ElementIcon\";\nimport {get} from 'react-hook-form';\n\nconst IconPicker = ({callback, id, validate, register, description, defaultValue, errors}) => {\n\n    const error = get(errors, id);\n    const [icon, setIcon] = useState(defaultValue);\n    const [modalVisible, setModalVisible] = useState(false);\n    const [iconPicker, setIconPicker] = useState(null);\n\n    const handleCallback = (value) => {\n        setModalVisible(false);\n        setIcon(value);\n        callback(value);\n    };\n    \n    useEffect(() => {\n        if(defaultValue !== null){\n            setIcon(defaultValue);\n        }\n    }, [defaultValue]);\n\n    return (\n        <React.Fragment>\n            <Modal\n                title={useTranslation(\"Choose icon\")}\n                visible={modalVisible}\n                testId={id}\n            >\n                <div className=\"text-left\">\n                    <label className=\"form-label\" htmlFor=\"icon-picker\">\n                        {useTranslation(\"Select icon type from the list\")}\n                    </label>\n                    <select\n                        data-cy=\"select-icon\"\n                        onChange={(e)=>{\n                            e.preventDefault();\n                            e.stopPropagation();\n                            setIconPicker(e.currentTarget.value);\n                        }}\n                        className=\"form-control\"\n                        id=\"icon-picker\"\n                    >\n                        <option value=\"\">{useTranslation(\"--Select--\")}</option>\n                        <option value=\"dashicon\">{useTranslation(\"Select a Dashicon\")}</option>\n                        <option value=\"image\">{useTranslation(\"Upload an icon image\")}</option>\n                    </select>\n                </div>\n                {iconPicker && (\n                    <div className=\"mt-8\">\n                        <DashiconSelector\n                            type={iconPicker}\n                            callback={handleCallback}\n                        />\n                    </div>\n                )}\n            </Modal>\n            <div className=\"flex-center s-8\">\n                {icon && (\n                    <ElementIcon value={icon} />\n                )}\n                <input\n                    id={id}\n                    name={id}\n                    type=\"text\"\n                    data-cy=\"input-icon\"\n                    value={icon ? icon : ''}\n                    className={`hidden`}\n                    {...register(id, validate)}\n                />\n                <Button\n                    onClick={(e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        setModalVisible(!modalVisible);\n                    }}\n                    style={styleVariants.SECONDARY}\n                    size=\"sm\"\n                    testId={id}\n                >\n                    {useTranslation(\"Choose icon\")}\n                </Button>\n            </div>\n            {description && (\n                <div className=\"form-description\">{description}</div>\n            )}\n            {error && <div data-cy=\"input-error-icon\" className=\"invalid-feedback\">{error.message}</div>}\n        </React.Fragment>\n    );\n};\n\nIconPicker.propTypes = {\n    id: PropTypes.string.isRequired,\n    defaultValue: PropTypes.string,\n    description: PropTypes.string,\n    callback: PropTypes.func,\n    validate: PropTypes.func,\n    register: PropTypes.func.isRequired,\n    errors: PropTypes.array.isRequired,\n\n\n};\n\nexport default IconPicker;","import React, {useEffect, useRef, useState} from 'react';\nimport {createPortal} from 'react-dom';\nimport {Icon} from \"@iconify/react\";\nimport PropTypes from 'prop-types';\nimport Button from \"../Button\";\nimport {useOutsideClick} from \"../../hooks/useOutsideClick\";\n\nconst Modal = ( {title, size = 'medium', visible = false, textAlign = \"left\", padding = 24, buttons = [], testId, children}) => {\n\n    // manage local state\n    const didMountRef = useRef(false);\n    const [closed, setClosed] = useState(!visible);\n    const node = useRef();\n\n    useEffect(() => {\n        if (didMountRef.current){\n            setClosed(!closed);\n        } else {\n            didMountRef.current = true;\n        }\n    }, [visible]);\n\n    useOutsideClick(node, () => {\n        setClosed(true);\n    });\n\n    if(closed){\n        return null;\n    }\n\n    return createPortal(\n        <div className=\"acpt-overlay\">\n            <div\n                ref={node}\n                className={`acpt-modal ${size} ${closed ? 'modal-hidden' : 'modal-open'}`}\n                data-cy={testId ? \"modal-\"+testId : null}\n            >\n                <div className=\"acpt-modal-header flex-between\">\n                    <h3>{title}</h3>\n                    <a\n                        className=\"modal-close-icon\"\n                        href=\"#\"\n                        onClick={(e) => {\n                            e.preventDefault();\n                            setClosed(!closed);\n                        }}\n                    >\n                        <Icon icon=\"bx:bx-x\" color=\"#777\" width={24} />\n                    </a>\n                </div>\n                <div className={`acpt-modal-body p-${padding} text-${textAlign}`}>\n                    {children}\n                </div>\n                {buttons.length > 0 && (\n                    <div className=\"acpt-modal-footer\">\n                        <div className=\"i-flex-center s-8\">\n                            {buttons.map((button) => button)}\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>,\n        document.getElementById(\"acpt-admin-app-wrapper\")\n    );\n};\n\nModal.propTypes = {\n    title: PropTypes.string.isRequired,\n    visible: PropTypes.bool,\n    padding: PropTypes.number,\n    testId: PropTypes.string,\n    buttons: PropTypes.arrayOf(Button),\n    textAlign: PropTypes.oneOf([\n        'center',\n        'left',\n        'right',\n    ]),\n    size: PropTypes.oneOf([\n        'small',\n        'medium',\n        'large',\n    ]),\n};\n\nexport default Modal;","// please refer to\n// https://developer.wordpress.org/reference/functions/get_post_type_labels/\nimport useTranslation from \"../hooks/useTranslation\";\n\nexport const postLabels = [\n    {\n        id: \"menu_name\",\n        label: useTranslation(\"Menu Name\"),\n        description: useTranslation(\"Label for the menu name. Default is the same as name.\"),\n    },\n    {\n        id: \"all_items\",\n        label: useTranslation(\"All items\"),\n        description: useTranslation(\"Label to signify all items in a submenu link. Default is ‘All Posts’ / ‘All Pages’.\"),\n    },\n    {\n        id: \"add_new\",\n        label: useTranslation(\"Add New\"),\n        description: useTranslation(\"Default is ‘Add New’ for both hierarchical and non-hierarchical types.\"),\n    },\n    {\n        id: \"add_new_item\",\n        label: useTranslation(\"Add New Item\"),\n        description: useTranslation(\"Label for adding a new singular item. Default is ‘Add New Post’ / ‘Add New Page’.\"),\n    },\n    {\n        id: \"edit_item\",\n        label: useTranslation(\"Edit Item\"),\n        description: useTranslation(\"Label for editing a singular item. Default is ‘Edit Post’ / ‘Edit Page’.\"),\n    },\n    {\n        id: \"new_item\",\n        label: useTranslation(\"New Item\"),\n        description: useTranslation(\"Label for the new item page title. Default is ‘New Post’ / ‘New Page’.\"),\n    },\n    {\n        id: \"view_item\",\n        label: useTranslation(\"View Item\"),\n        description: useTranslation(\"Label for viewing a singular item. Default is ‘View Post’ / ‘View Page’.\"),\n    },\n    {\n        id: \"view_items\",\n        label: useTranslation(\"View Items\"),\n        description: useTranslation(\"Label for viewing post type archives. Default is ‘View Posts’ / ‘View Pages’.\"),\n    },\n    {\n        id: \"search_item\",\n        label: useTranslation(\"Search Item\"),\n        description: useTranslation(\"Label for searching plural items. Default is ‘Search Posts’ / ‘Search Pages’.\"),\n    },\n    {\n        id: \"not_found\",\n        label: useTranslation(\"Not Found\"),\n        description: useTranslation(\"Label used when no items are found. Default is ‘No posts found’ / ‘No pages found’.\"),\n    },\n    {\n        id: \"not_found_in_trash\",\n        label: useTranslation(\"Not Found in Trash\"),\n        description: useTranslation(\"Label used when no items are in the Trash. Default is ‘No posts found in Trash’ / ‘No pages found in Trash’.\"),\n    },\n    {\n        id: \"parent_item_colon\",\n        label: useTranslation(\"Parent\"),\n        description: useTranslation(\"Label used to prefix parents of hierarchical items. Not used on non-hierarchical post types. Default is ‘Parent Page:’.\"),\n    },\n    {\n        id: \"featured_image\",\n        label: useTranslation(\"Featured Image\"),\n        description: useTranslation(\"Label for the featured image meta box title. Default is ‘Featured image’.\"),\n    },\n    {\n        id: \"set_featured_image\",\n        label: useTranslation(\"Set Featured Image\"),\n        description: useTranslation(\"Label for setting the featured image. Default is ‘Set featured image’.\"),\n    },\n    {\n        id: \"remove_featured_image\",\n        label: useTranslation(\"Remove Featured Image\"),\n        description: useTranslation(\"Label for removing the featured image. Default is ‘Remove featured image’.\"),\n    },\n    {\n        id: \"use_featured_image\",\n        label: useTranslation(\"Use Featured Image\"),\n        description: useTranslation(\"Label in the media frame for using a featured image. Default is ‘Use as featured image’.\"),\n    },\n    {\n        id: \"archives\",\n        label: useTranslation(\"Archives\"),\n        description: useTranslation(\"Label for archives in nav menus. Default is ‘Post Archives’ / ‘Page Archives’.\"),\n    },\n    {\n        id: \"insert_into_item\",\n        label: useTranslation(\"Insert into item\"),\n        description: useTranslation(\"Label for the media frame button. Default is ‘Insert into post’ / ‘Insert into page’.\"),\n    },\n    {\n        id: \"uploaded_to_this_item\",\n        label: useTranslation(\"Uploaded to this Item\"),\n        description: useTranslation(\"Label for the media frame filter. Default is ‘Uploaded to this post’ / ‘Uploaded to this page’.\"),\n    },\n    {\n        id: \"filter_items_list\",\n        label: useTranslation(\"Filter Items List\"),\n        description: useTranslation(\"Label for the table views hidden heading. Default is ‘Filter posts list’ / ‘Filter pages list’.\"),\n    },\n    {\n        id: \"items_list_navigation\",\n        label: useTranslation(\"Items List Navigation\"),\n        description: useTranslation(\"Label for the table pagination hidden heading. Default is ‘Posts list navigation’ / ‘Pages list navigation’.\"),\n    },\n    {\n        id: \"items_list\",\n        label: useTranslation(\"Items List\"),\n        description: useTranslation(\"Label for the table hidden heading. Default is ‘Posts list’ / ‘Pages list’.\"),\n    },\n    {\n        id: \"filter_by_date\",\n        label: useTranslation(\"Filter by date\"),\n        description: useTranslation(\"Label for the date filter in list tables. Default is ‘Filter by date’.\"),\n    },\n    {\n        id: \"item_published\",\n        label: useTranslation(\"Item published\"),\n        description: useTranslation(\"Label used when an item is published. Default is ‘Post published.’ / ‘Page published.’\"),\n    },\n    {\n        id: \"item_published_privately\",\n        label: useTranslation(\"Item published privately\"),\n        description: useTranslation(\"Label used when an item is published with private visibility. Default is ‘Post published privately.’ / ‘Page published privately.’\"),\n    },\n    {\n        id: \"item_reverted_to_draft\",\n        label: useTranslation(\"Item reverted to draft\"),\n        description: useTranslation(\"Label used when an item is switched to a draft. Default is ‘Post reverted to draft.’ / ‘Page reverted to draft.’\"),\n    },\n    {\n        id: \"item_scheduled\",\n        label: useTranslation(\"Item scheduled\"),\n        description: useTranslation(\"Label used when an item is scheduled for publishing. Default is ‘Post scheduled.’ / ‘Page scheduled.’\"),\n    },\n    {\n        id: \"item_updated\",\n        label: useTranslation(\"Item updated\"),\n        description: useTranslation(\"Label used when an item is updated. Default is ‘Post updated.’ / ‘Page updated.’\"),\n    },\n];","import React, {useEffect, useState} from 'react';\nimport Input from \"../../../components/Forms/Input\";\nimport {useForm} from \"react-hook-form\";\nimport Button from \"../../../components/Button\";\nimport useTranslation from \"../../../hooks/useTranslation\";\nimport {styleVariants} from \"../../../constants/styles\";\nimport Layout from \"../../../layout/Layout\";\nimport PropTypes from 'prop-types';\nimport StepsHeader from \"../../../components/Steps/StepsHeader\";\nimport Card from \"../../../components/Card\";\nimport CardRow from \"../../../components/Card/CardRow\";\nimport {useSelector} from \"react-redux\";\nimport {asyncIsPostTypeNameValid, isPostTypeNameValid} from \"../../../utils/validation\";\nimport {sluggifyString} from \"../../../utils/strings\";\nimport IconPicker from \"../../../components/Forms/IconPicker\";\nimport Checkbox from \"../../../components/Forms/Checkbox\";\n\nconst BasicStep = ({ title, crumbs, headings, stepActive, setStepActive, handleSubmit, edit = false, formValues}) => {\n\n    // manage global state\n    const {data} = useSelector(state => state.fetchCustomPostTypes);\n\n    // manage local state\n    const [icon, setIcon] = useState(null);\n    const [supports, setSupports] = useState({\n        title: true,\n        editor: true,\n        thumbnail: true,\n        excerpt: true,\n        author: false,\n        trackbacks: false,\n        custom_fields: false,\n        comments: false,\n        revisions: false,\n        page_attributes: false,\n        post_formats: false,\n    });\n\n    const { register, handleSubmit: submit, setValue, formState: {errors} } = useForm({\n        mode: 'all'\n    });\n\n    useEffect(() => {\n        if(formValues && formValues[1]){\n\n            setIcon(formValues[1].icon);\n            setSupports({\n                title: formValues[1].support_0,\n                editor: formValues[1].support_1,\n                thumbnail: formValues[1].support_2,\n                excerpt: formValues[1].support_3,\n                author: formValues[1].support_4,\n                trackbacks: formValues[1].support_5,\n                custom_fields: formValues[1].support_6,\n                comments: formValues[1].support_7,\n                revisions: formValues[1].support_8,\n                page_attributes: formValues[1].support_9,\n                post_formats: formValues[1].support_10,\n            });\n\n            setValue(\"post_name\", formValues[1].post_name);\n            setValue(\"singular_label\", formValues[1].singular_label);\n            setValue(\"plural_label\", formValues[1].plural_label);\n            setValue(\"icon\", formValues[1].icon);\n            setValue(\"support_0\", formValues[1].support_0);\n            setValue(\"support_1\", formValues[1].support_1);\n            setValue(\"support_2\", formValues[1].support_2);\n            setValue(\"support_3\", formValues[1].support_3);\n            setValue(\"support_4\", formValues[1].support_4);\n            setValue(\"support_5\", formValues[1].support_5);\n            setValue(\"support_6\", formValues[1].support_6);\n            setValue(\"support_7\", formValues[1].support_7);\n            setValue(\"support_8\", formValues[1].support_8);\n            setValue(\"support_9\", formValues[1].support_9);\n            setValue(\"support_10\", formValues[1].support_10);\n        }\n    }, [formValues]);\n\n    useEffect(() => {\n        if(data.length > 0){\n\n            setIcon(data[0].icon);\n            setSupports({\n                title: data[0].supports.includes('title'),\n                editor: data[0].supports.includes('editor'),\n                thumbnail: data[0].supports.includes('thumbnail'),\n                excerpt: data[0].supports.includes('excerpt'),\n                author: data[0].supports.includes('author'),\n                trackbacks: data[0].supports.includes('trackbacks'),\n                custom_fields: data[0].supports.includes('custom-fields'),\n                comments: data[0].supports.includes('comments'),\n                revisions: data[0].supports.includes('revisions'),\n                page_attributes: data[0].supports.includes('page-attributes'),\n                post_formats: data[0].supports.includes('post-formats'),\n            });\n\n            setValue(\"post_name\", data[0].name);\n            setValue(\"singular_label\", data[0].singular);\n            setValue(\"plural_label\", data[0].plural);\n            setValue(\"icon\", data[0].icon);\n            setValue(\"support_0\", data[0].supports.includes('title') ? 'title' : false);\n            setValue(\"support_1\", data[0].supports.includes('editor') ? 'editor' : false);\n            setValue(\"support_2\", data[0].supports.includes('thumbnail') ? 'thumbnail' : false);\n            setValue(\"support_3\", data[0].supports.includes('excerpt') ? 'excerpt' : false);\n            setValue(\"support_4\", data[0].supports.includes('author') ? 'author' : false);\n            setValue(\"support_5\", data[0].supports.includes('trackbacks') ? 'trackbacks' : false);\n            setValue(\"support_6\", data[0].supports.includes('custom-fields') ? 'custom-fields' : false);\n            setValue(\"support_7\", data[0].supports.includes('comments') ? 'comments' : false);\n            setValue(\"support_8\", data[0].supports.includes('revisions') ? 'revisions' : false);\n            setValue(\"support_9\", data[0].supports.includes('page-attributes') ? 'page-attributes' : false);\n            setValue(\"support_10\", data[0].supports.includes('post-formats') ? 'post-formats' : false);\n        }\n    }, [data]);\n\n    const handlePostNameChange = (post_name) => {\n        setValue('post_name', sluggifyString(post_name, 20));\n    };\n\n    const onSubmit = (data) => {\n        handleSubmit(data, 1);\n        setStepActive(1);\n    };\n\n    const actions = [\n        <Button\n            testId=\"next-step\"\n            style={styleVariants.SECONDARY}\n        >\n            {useTranslation(\"Next Step\")}\n        </Button>\n    ];\n\n    return (\n        <form onSubmit={submit(onSubmit)}>\n            <Layout\n                crumbs={crumbs}\n                title={title}\n                actions={actions}\n            >\n                <Card style=\"with-shadow\">\n                    <StepsHeader\n                        stepActive={stepActive}\n                        headings={headings}\n                    />\n                    <CardRow\n                        label={useTranslation(\"Post name\")}\n                        value={\n                            <Input\n                                id=\"post_name\"\n                                placeholder={useTranslation(\"Post name\")}\n                                readOnly={data.length > 0}\n                                description={useTranslation(\"The post name/slug. Used for various queries.\")}\n                                onChangeCapture={ e => handlePostNameChange(e.currentTarget.value) }\n                                register={register}\n                                errors={errors}\n                                isRequired={true}\n                                validate={{\n                                    validate: edit ? isPostTypeNameValid : asyncIsPostTypeNameValid,\n                                    required: useTranslation(\"This field is mandatory\")\n                                }}\n                            />\n                        }\n                    />\n                    <CardRow\n                        label={useTranslation(\"Singular label\")}\n                        value={\n                            <Input\n                                id=\"singular_label\"\n                                placeholder={useTranslation(\"(e.g. Movie)\")}\n                                defaultValue={data.length > 0 ? data[0].singular : null }\n                                description={useTranslation(\"Used when a singular label is needed\")}\n                                register={register}\n                                errors={errors}\n                                isRequired={true}\n                                validate={{\n                                    required: useTranslation(\"This field is mandatory\")\n                                }}\n                            />\n                        }\n                    />\n                    <CardRow\n                        label={useTranslation(\"Plural label\")}\n                        value={\n                            <Input\n                                id=\"plural_label\"\n                                placeholder={useTranslation(\"(e.g. Movies)\")}\n                                defaultValue={data.length > 0 ? data[0].plural : null }\n                                description={useTranslation(\"Used for the post type admin menu item\")}\n                                register={register}\n                                errors={errors}\n                                isRequired={true}\n                                validate={{\n                                    required: useTranslation(\"This field is mandatory\")\n                                }}\n                            />\n                        }\n                    />\n                    <CardRow\n                        label={useTranslation(\"Icon\")}\n                        value={\n                            <IconPicker\n                                id=\"icon\"\n                                callback={(value) => {\n                                    setValue(\"icon\", value);\n                                }}\n                                defaultValue={icon}\n                                register={register}\n                                errors={errors}\n                                description={useTranslation(\"Displayed on the sidebar of the admin panel\")}\n                                validate={{\n                                    required: useTranslation(\"This field is mandatory\")\n                                }}\n                            />\n                        }\n                    />\n                    <CardRow\n                        label={useTranslation(\"Support\")}\n                        wizard={`${useTranslation(\"Add support for various available post edit features. For more info\")} <a target='_blank' href='https://developer.wordpress.org/reference/functions/register_post_type/#supports'>${useTranslation(\"see here\")}<a/>.`}\n                        value={\n                            <Checkbox\n                                register={register}\n                                errors={errors}\n                                id=\"support\"\n                                values={{\n                                    \"title\": {\n                                        \"value\": \"title\",\n                                        \"checked\": supports.title,\n                                    },\n                                    \"editor\": {\n                                        \"value\": \"editor\",\n                                        \"checked\": supports.editor,\n                                    },\n                                    \"thumbnail\": {\n                                        \"value\": \"thumbnail\",\n                                        \"checked\": supports.thumbnail,\n                                    },\n                                    \"excerpt\": {\n                                        \"value\": \"excerpt\",\n                                        \"checked\": supports.excerpt,\n                                    },\n                                    \"author\": {\n                                        \"value\": \"author\",\n                                        \"checked\": supports.author,\n                                    },\n                                    \"trackbacks\": {\n                                        \"value\": \"trackbacks\",\n                                        \"checked\": supports.trackbacks,\n                                    },\n                                    \"custom-fields\": {\n                                        \"value\": \"custom-fields\",\n                                        \"checked\": supports.custom_fields,\n                                    },\n                                    \"comments\": {\n                                        \"value\": \"comments\",\n                                        \"checked\": supports.comments,\n                                    },\n                                    \"revisions\": {\n                                        \"value\": \"revisions\",\n                                        \"checked\": supports.revisions,\n                                    },\n                                    \"page-attributes\": {\n                                        \"value\": \"page-attributes\",\n                                        \"checked\": supports.page_attributes,\n                                    },\n                                    \"post-formats\": {\n                                        \"value\": \"post-formats\",\n                                        \"checked\": supports.post_formats,\n                                    }\n                                }}\n                            />\n                        }\n                    />\n                </Card>\n            </Layout>\n        </form>\n    );\n};\n\nBasicStep.propTypes = {\n    headings: PropTypes.arrayOf(PropTypes.shape({\n        label:  PropTypes.string.isRequired,\n        description:  PropTypes.string.isRequired,\n    })).isRequired,\n    title: PropTypes.string.isRequired,\n    crumbs: PropTypes.arrayOf(Button).isRequired,\n    stepActive: PropTypes.number.isRequired,\n    setStepActive: PropTypes.func.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    formValues: PropTypes.object.isRequired,\n    edit: PropTypes.bool\n};\n\nexport default BasicStep;","import React, {useEffect} from 'react';\nimport {useForm} from \"react-hook-form\";\nimport Input from \"../../../components/Forms/Input\";\nimport PropTypes from 'prop-types';\nimport Layout from \"../../../layout/Layout\";\nimport StepsHeader from \"../../../components/Steps/StepsHeader\";\nimport Button from \"../../../components/Button\";\nimport useTranslation from \"../../../hooks/useTranslation\";\nimport {styleVariants} from \"../../../constants/styles\";\nimport CardRow from \"../../../components/Card/CardRow\";\nimport Card from \"../../../components/Card\";\nimport {useSelector} from \"react-redux\";\nimport {postLabels} from \"../../../constants/postLabels\";\n\nconst LabelsStep = ({title, crumbs, headings, stepActive, setStepActive, handleSubmit, formValues, edit}) => {\n\n    // manage global state\n    const {data} = useSelector(state => state.fetchCustomPostTypes);\n\n    let labels = {};\n    if(data.length > 0){\n        labels = data[0].labels;\n    }\n\n    const { register, handleSubmit: submit, formState: {errors}, setValue } = useForm({\n        mode: 'all'\n    });\n\n    useEffect(() => {\n        if(!edit && formValues && formValues[1]){\n            setValue ('menu_name', formValues[1].singular_label);\n            setValue('all_items', `${useTranslation(\"All {{r}}\", {r: formValues[1].singular_label})}`);\n            setValue('add_new', `${useTranslation(\"Add\")} ${formValues[1].singular_label}`);\n            setValue('add_new_item', `${useTranslation(\"Add new {{r}}\", {r: formValues[1].singular_label})}`);\n            setValue('edit_item', `${useTranslation(\"Edit\")} ${formValues[1].singular_label}`);\n            setValue('new_item', `${useTranslation(\"New\")} ${formValues[1].singular_label}`);\n            setValue('view_item', `${useTranslation(\"View\")} ${formValues[1].singular_label}`);\n            setValue('view_items', `${useTranslation(\"View\")} ${formValues[1].plural_label}`);\n            setValue('search_item', `${useTranslation(\"Search\")} ${formValues[1].plural_label}`);\n            setValue('not_found', useTranslation(\"No {{r}} found\", {r: formValues[1].singular_label}));\n            setValue('not_found_in_trash', useTranslation(\"No {{r}} found\", {r: formValues[1].singular_label}));\n            setValue('parent_item_colon', useTranslation(\"Parent item\"));\n            setValue('featured_image', useTranslation(\"Featured image\"));\n            setValue('set_featured_image', useTranslation(\"Set featured image\"));\n            setValue('remove_featured_image', useTranslation(\"Remove featured image\"));\n            setValue('use_featured_image', useTranslation(\"Use featured image\"));\n            setValue('archives', useTranslation(\"Archives\"));\n            setValue('insert_into_item', useTranslation(\"Insert\"));\n            setValue('uploaded_to_this_item', useTranslation(\"Upload\"));\n            setValue('filter_items_list', useTranslation(\"Filter {{r}} list\", {r: formValues[1].plural_label}));\n            setValue('items_list_navigation', useTranslation(\"Navigation list {{r}}\", {r: formValues[1].plural_label}));\n            setValue('items_list', useTranslation(\"List {{r}}\", {r: formValues[1].plural_label}));\n            setValue('filter_by_date', useTranslation(\"Filter by date\"));\n            setValue('item_published', useTranslation(\"{{r}} published\", {r: formValues[1].singular_label}));\n            setValue('item_published_privately', useTranslation(\"{{r}} published privately\", {r: formValues[1].singular_label}));\n            setValue('item_reverted_to_draft', useTranslation(\"{{r}} reverted to draft\", {r: formValues[1].singular_label}));\n            setValue('item_scheduled', useTranslation(\"{{r}} scheduled\", {r: formValues[1].singular_label}));\n            setValue('item_updated', useTranslation(\"{{r}} updated\", {r: formValues[1].singular_label}));\n        }\n    }, [formValues]);\n\n    useEffect(() => {\n        if(edit && data.length > 0){\n            setValue ('menu_name', labels.menu_name);\n            setValue('all_items', labels.all_items );\n            setValue('add_new', labels.add_new );\n            setValue('add_new_item', labels.add_new_item);\n            setValue('edit_item', labels.edit_item );\n            setValue('new_item', labels.new_item);\n            setValue('view_item', labels.view_item);\n            setValue('view_items', labels.view_items);\n            setValue('search_item', labels.search_item);\n            setValue('not_found', labels.not_found );\n            setValue('not_found_in_trash', labels.not_found_in_trash);\n            setValue('parent_item_colon', labels.parent_item_colon);\n            setValue('featured_image', labels.featured_image);\n            setValue('set_featured_image', labels.set_featured_image);\n            setValue('remove_featured_image', labels.remove_featured_image);\n            setValue('use_featured_image', labels.use_featured_image);\n            setValue('archives', labels.archives);\n            setValue('insert_into_item', labels.insert_into_item);\n            setValue('uploaded_to_this_item', labels.uploaded_to_this_item);\n            setValue('filter_items_list', labels.filter_items_list);\n            setValue('items_list_navigation', labels.items_list_navigation);\n            setValue('items_list', labels.items_list);\n            setValue('filter_by_date', labels.filter_by_date);\n            setValue('item_published', labels.item_published);\n            setValue('item_published_privately', labels.item_published_privately);\n            setValue('item_reverted_to_draft', labels.item_reverted_to_draft);\n            setValue('item_scheduled', labels.item_scheduled);\n            setValue('item_updated', labels.item_updated);\n        }\n    }, [data]);\n\n    const onSubmit = (data) => {\n        handleSubmit(data, 2);\n        setStepActive(2);\n    };\n\n    const actions = [\n        <Button testId=\"prev-step\" type=\"button\" onClick={() => setStepActive(0)} style={styleVariants.SECONDARY}>{useTranslation(\"Previous Step\")}</Button>,\n        <Button testId=\"next-step\" style={styleVariants.SECONDARY}>{useTranslation(\"Next Step\")}</Button>,\n    ];\n\n    return (\n        <form onSubmit={submit(onSubmit)}>\n            <Layout\n                crumbs={crumbs}\n                title={title}\n                actions={actions}\n            >\n                <Card style=\"with-shadow\">\n                    <StepsHeader\n                        stepActive={stepActive}\n                        headings={headings}\n                    />\n                    {postLabels.map((label)=>(\n                        <CardRow\n                            label={label.label}\n                            value={\n                                <Input\n                                    id={label.id}\n                                    register={register}\n                                    description={label.description}\n                                    errors={errors}\n                                    isRequired={true}\n                                    validate={{\n                                        required: useTranslation(\"This field is mandatory\")\n                                    }}\n                                />\n                            }\n                        />\n                    ))}\n                </Card>\n            </Layout>\n        </form>\n    );\n};\n\nLabelsStep.propTypes = {\n    headings: PropTypes.arrayOf(PropTypes.shape({\n        label:  PropTypes.string.isRequired,\n        description:  PropTypes.string.isRequired,\n    })).isRequired,\n    title: PropTypes.string.isRequired,\n    crumbs: PropTypes.arrayOf(Button).isRequired,\n    stepActive: PropTypes.number.isRequired,\n    setStepActive: PropTypes.func.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    formValues: PropTypes.object.isRequired,\n    edit: PropTypes.bool.isRequired,\n};\n\nexport default LabelsStep;","import React, {useEffect} from 'react';\nimport {useForm} from \"react-hook-form\";\nimport Input from \"../../../components/Forms/Input\";\nimport {styleVariants} from \"../../../constants/styles\";\nimport Button from \"../../../components/Button\";\nimport useTranslation from \"../../../hooks/useTranslation\";\nimport StepsHeader from \"../../../components/Steps/StepsHeader\";\nimport Layout from \"../../../layout/Layout\";\nimport PropTypes from 'prop-types';\nimport CardRow from \"../../../components/Card/CardRow\";\nimport Card from \"../../../components/Card\";\nimport {useSelector} from \"react-redux\";\nimport Toggle from \"../../../components/Forms/Toggle\";\nimport {validWPGraphQLName} from \"../../../utils/validation\";\nimport Boolean from \"../../../components/Boolean\";\n\nconst SettingsStep = ({title, crumbs, headings, stepActive, setStepActive, handleSubmit, formValues, isWPGraphQLActive = false, loading = false}) => {\n\n    // manage global state\n    const {data} = useSelector(state => state.fetchCustomPostTypes);\n\n    // handle form\n    let settings = {};\n    if(data.length > 0){\n        settings = data[0].settings;\n    }\n\n    const { register, handleSubmit: submit, formState: {errors, isValid}, setValue, watch } = useForm({\n        mode: 'all',\n        defaultValues: {\n            public: data.length > 0 ? settings.public : null,\n            publicly_queryable: data.length > 0 ? settings.publicly_queryable : null,\n            show_ui: data.length > 0 ? settings.show_ui : null,\n            show_in_menu: data.length > 0 ? settings.show_in_menu : null,\n            show_in_nav_menus: data.length > 0 ? settings.show_in_nav_menus : null,\n            show_in_admin_bar: data.length > 0 ? settings.show_in_admin_bar : null,\n            show_in_rest: data.length > 0 ? settings.show_in_rest : null,\n            rest_base: data.length > 0 ? settings.rest_base : null,\n            menu_position: data.length > 0 ? settings.menu_position : null,\n            capability_type: data.length > 0 ? settings.capability_type : 'post',\n            has_archive: data.length > 0 ? settings.has_archive : null,\n            rewrite: data.length > 0 ? settings.rewrite : null,\n            custom_rewrite: data.length > 0 ? settings.custom_rewrite : null,\n            query_var: data.length > 0 ? settings.query_var : null,\n            custom_query_var: data.length > 0 ? settings.custom_query_var : null\n        }\n    });\n\n    // GRAPHQL Integration\n    useEffect(() => {\n        if (formValues) {\n            setValue(\"show_in_graphql\",  data.length > 0 ? settings.show_in_graphql : true);\n            setValue(\"graphql_single_name\",  data.length > 0 ? settings.graphql_single_name : formValues[1].singular_label);\n            setValue(\"graphql_plural_name\",  data.length > 0 ? settings.graphql_plural_name : formValues[1].plural_label);\n        }\n    }, [formValues]);\n\n    const showInGraphql = watch('show_in_graphql');\n    const graphqlSingleName = watch('graphql_single_name');\n    const graphqlPluralName = watch('graphql_plural_name');\n\n    const handleGraphQLSingleNameChange = (single_name) => {\n        if (single_name === graphqlPluralName) {\n            return useTranslation('Single name MUST be different from plural name');\n        }\n    };\n\n    const handleGraphQLPluralNameChange = (plural_name) => {\n        if (plural_name === graphqlSingleName) {\n            return useTranslation('Different name MUST be different from single name');\n        }\n    };\n\n    const rewrite = watch(\"rewrite\");\n    const query_var = watch(\"query_var\");\n\n    const onSubmit = (data) => {\n        handleSubmit(data, 3);\n    };\n\n    const actions = [\n        <Button testId=\"prev-step\" type=\"button\" onClick={() => setStepActive(1)} style={styleVariants.SECONDARY}>{useTranslation(\"Previous Step\")}</Button>,\n        <Button testId=\"save\" style={styleVariants.PRIMARY} disabled={loading}>{useTranslation(\"Save\")}</Button>,\n    ];\n\n    return (\n        <form onSubmit={submit(onSubmit)}>\n            <Layout\n                crumbs={crumbs}\n                title={title}\n                actions={actions}\n            >\n                <Card style=\"with-shadow\">\n                    <StepsHeader\n                        stepActive={stepActive}\n                        headings={headings}\n                    />\n                    {isWPGraphQLActive && (\n                        <React.Fragment>\n                            <CardRow\n                                label={useTranslation(\"Show in GraphQL\")}\n                                value={\n                                    <Toggle\n                                        id=\"show_in_graphql\"\n                                        description={useTranslation(\"Show the custom post type in WPGraphQL.\")}\n                                        defaultValue={true}\n                                        register={register}\n                                        errors={errors}\n                                    />\n                                }\n                            />\n                            <CardRow\n                                label={useTranslation(\"GraphQL single name\")}\n                                value={\n                                    <Input\n                                        id=\"graphql_single_name\"\n                                        register={register}\n                                        placeholder={useTranslation(\"Ex. movie\")}\n                                        description={useTranslation(\"Camel case string with no punctuation or spaces. Needs to start with a letter (not a number). Important to be different than the plural name.\")}\n                                        errors={errors}\n                                        isRequired={showInGraphql}\n                                        validate={{\n                                            validate: {\n                                                validWPGraphQLName,\n                                                handleGraphQLSingleNameChange\n                                            },\n                                        }}\n                                    />\n                                }\n                            />\n                            <CardRow\n                                label={useTranslation(\"GraphQL plural name\")}\n                                value={\n                                    <Input\n                                        id=\"graphql_plural_name\"\n                                        register={register}\n                                        placeholder={useTranslation(\"Ex. movies\")}\n                                        description={useTranslation(\"Camel case string with no punctuation or spaces. Needs to start with a letter (not a number). Important to be different than the single name.\")}\n                                        errors={errors}\n                                        isRequired={showInGraphql}\n                                        validate={{\n                                            validate: {\n                                                validWPGraphQLName,\n                                                handleGraphQLSingleNameChange\n                                            },\n                                        }}\n                                    />\n                                }\n                            />\n                        </React.Fragment>\n                    )}\n                    <CardRow\n                        label={useTranslation(\"Hierarchical\")}\n                        value={<Toggle\n                            id=\"hierarchical\"\n                            description={useTranslation(\"Whether the post type is hierarchical (e.g. page). Default false.\")}\n                            defaultValue={data.length > 0 ? settings.hierarchical : false}\n                            register={register}\n                            errors={errors}\n                        />}\n                    />\n                    <CardRow\n                        label={useTranslation(\"Is Public\")}\n                        value={\n                            <Toggle\n                                id=\"public\"\n                                description={useTranslation(\"Whether a post type is intended for use publicly either via the admin interface or by front-end users.\")}\n                                defaultValue={data.length > 0 ? settings.public : true}\n                                register={register}\n                                errors={errors}\n                            />\n                        }\n                    />\n                    <CardRow\n                        label={useTranslation(\"Publicly queryable\")}\n                        value={\n                            <Toggle\n                                id=\"publicly_queryable\"\n                                description={useTranslation(\"Whether queries can be performed on the front end for the post type as part of parse_request().\")}\n                                defaultValue={data.length > 0 ? settings.publicly_queryable : true}\n                                register={register}\n                                errors={errors}\n                            />\n                        }\n                    />\n                    <CardRow\n                        label={useTranslation(\"Show in UI\")}\n                        value={\n                            <Toggle\n                                id=\"show_ui\"\n                                description={useTranslation(\"Whether to generate and allow a UI for managing this post type in the admin. Default is value of $public.\")}\n                                defaultValue={data.length > 0 ? settings.show_ui : true}\n                                register={register}\n                                errors={errors}\n                            />\n                        }\n                    />\n                    <CardRow\n                        label={useTranslation(\"Show in menu\")}\n                        value={\n                            <Toggle\n                                id=\"show_in_menu\"\n                                description={useTranslation(\"Where to show the post type in the admin menu. To work, $show_ui must be true. If true, the post type is shown in its own top level menu. If false, no menu is shown.\")}\n                                defaultValue={data.length > 0 ? settings.show_in_menu : true}\n                                register={register}\n                                errors={errors}\n                            />\n                        }\n                    />\n                    <CardRow\n                        label={useTranslation(\"Show in nav menus\")}\n                        value={\n                            <Toggle\n                                id=\"show_in_nav_menus\"\n                                description={useTranslation(\"Makes this post type available for selection in navigation menus. Default is value of $public.\")}\n                                defaultValue={data.length > 0 ? settings.show_in_nav_menus : true}\n                                register={register}\n                                errors={errors}\n                            />\n                        }\n                    />\n                    <CardRow\n                        label={useTranslation(\"Show in admin bar\")}\n                        value={\n                            <Toggle\n                                id=\"show_in_admin_bar\"\n                                description={useTranslation(\"Makes this post type available via the admin bar. Default is value of $show_in_menu.\")}\n                                defaultValue={data.length > 0 ? settings.show_in_admin_bar : true}\n                                register={register}\n                                errors={errors}\n                            />\n                        }\n                    />\n                    <CardRow\n                        label={useTranslation(\"Show in REST API\")}\n                        value={\n                            <Toggle\n                                id=\"show_in_rest\"\n                                description={useTranslation(\"Whether to include the post type in the REST API. Set this to true for the post type to be available in the block editor. SET TRUE TO ENABLE GUTEMBERG EDITOR.\")}\n                                defaultValue={data.length > 0 ? settings.show_in_rest : true}\n                                register={register}\n                                errors={errors}\n                            />\n                        }\n                    />\n                    <CardRow\n                        label={useTranslation(\"REST API base slug\")}\n                        value={\n                            <Input\n                                id=\"rest_base\"\n                                placeholder={useTranslation(\"REST API base slug\")}\n                                description={useTranslation(\"To change the base url of REST API route. Default is $post_type.\")}\n                                validate={{\n                                    maxLength: {\n                                        value: 255,\n                                        message: useTranslation(\"max length is 255\")\n                                    }\n                                }}\n                                register={register}\n                                errors={errors}\n                            />\n                        }\n                    />\n                    <CardRow\n                        label={useTranslation(\"Menu position\")}\n                        value={\n                            <Input\n                                id=\"menu_position\"\n                                min=\"1\"\n                                max=\"100\"\n                                placeholder={useTranslation(\"Menu position\")}\n                                description={useTranslation(\"The position in the menu order the post type should appear. To work, $show_in_menu must be true. Default null (at the bottom).\")}\n                                validate={{\n                                    min: {\n                                        value: 1,\n                                        message: useTranslation(\"min length is\") + \" 1\"\n                                    },\n                                    max: {\n                                        value: 100,\n                                        message: useTranslation(\"max length is\") + \" 100\"\n                                    }\n                                }}\n                                register={register}\n                                errors={errors}\n                            />\n                        }\n                    />\n                    <CardRow\n                        label={useTranslation(\"Capability type\")}\n                        value={\n                            <Input\n                                id=\"capability_type\"\n                                defaultValue=\"post\"\n                                description={useTranslation(\"The string to use to build the read, edit, and delete capabilities. May be passed as an array to allow for alternative plurals when using this argument as a base to construct the capabilities, e.g. array('story', 'stories'). Default 'post'.\")}\n                                validate={{\n                                    maxLength: {\n                                        value: 255,\n                                        message: \"max length is 255\"\n                                    }\n                                }}\n                                register={register}\n                                errors={errors}\n                            />\n                        }\n                    />\n                    <CardRow\n                        label={useTranslation(\"Has archive\")}\n                        value={\n                            <Toggle\n                                id=\"has_archive\"\n                                description={useTranslation(\"Whether there should be post type archives, or if a string, the archive slug to use. Will generate the proper rewrite rules if $rewrite is enabled.\")}\n                                defaultValue={data.length > 0 ? settings.has_archive : true}\n                                register={register}\n                                errors={errors}\n                            />\n                        }\n                    />\n                    <CardRow\n                        label={useTranslation(\"Rewrite\")}\n                        value={\n                            <Toggle\n                                id=\"rewrite\"\n                                description={useTranslation(\"Triggers the handling of rewrites for this post type. To prevent rewrite, set to false. Defaults to true, using $post_type as slug. To specify rewrite rules, an array can be passed with any of these keys:\")}\n                                defaultValue={data.length > 0 ? settings.rewrite : true}\n                                register={register}\n                                errors={errors}\n                            />\n                        }\n                    />\n                    {rewrite && (\n                        <CardRow\n                            label={useTranslation(\"Custom rewrite rules\")}\n                            value={\n                                <Input\n                                    id=\"custom_rewrite\"\n                                    placeholder={useTranslation(\"Custom rewrite rules\")}\n                                    description={useTranslation(\"Custom post type slug to use instead of default.\")}\n                                    validate={{\n                                        maxLength: {\n                                            value: 255,\n                                            message: useTranslation(\"max length is 255\")\n                                        }\n                                    }}\n                                    register={register}\n                                    errors={errors}\n                                />\n                            }\n                        />\n                    )}\n                    <CardRow\n                        label={useTranslation(\"Query var\")}\n                        value={\n                            <Toggle\n                                id=\"query_var\"\n                                description={useTranslation(\"Sets the query_var key for this post type. Defaults to  key. If false, a post type cannot be loaded at ?{query_var}={post_slug}. If specified as a string, the query {post_slug} will be valid.\")}\n                                defaultValue={data.length > 0 ? settings.query_var : true}\n                                register={register}\n                                errors={errors}\n                            />\n                        }\n                    />\n                    {query_var && (\n                        <CardRow\n                            label={useTranslation(\"Custom query var\")}\n                            value={\n                                <Input\n                                    id=\"custom_query_var\"\n                                    placeholder={useTranslation(\"Custom query var\")}\n                                    description={useTranslation(\"Custom query var slug to use instead of default.\")}\n                                    validate={{\n                                        maxLength: {\n                                            value: 255,\n                                            message: useTranslation(\"min length is\") + \" 255\"\n                                        }\n                                    }}\n                                    register={register}\n                                    errors={errors}\n                                />\n                            }\n                        />\n                    )}\n                </Card>\n            </Layout>\n        </form>\n    );\n};\n\nSettingsStep.propTypes = {\n    headings: PropTypes.arrayOf(PropTypes.shape({\n        label:  PropTypes.string.isRequired,\n        description:  PropTypes.string.isRequired,\n    })).isRequired,\n    title: PropTypes.string.isRequired,\n    crumbs: PropTypes.arrayOf(Button).isRequired,\n    stepActive: PropTypes.number.isRequired,\n    setStepActive: PropTypes.func.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    formValues: PropTypes.object.isRequired,\n    isWPGraphQLActive: PropTypes.bool,\n    loading: PropTypes.bool,\n};\n\nexport default SettingsStep;","import React, {useEffect, useState} from 'react';\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Steps from \"../../components/Steps\";\nimport BasicStep from \"./Steps/BasicStep\";\nimport LabelsStep from \"./Steps/LabelsStep\";\nimport SettingsStep from \"./Steps/SettingsStep\";\nimport useTranslation from \"../../hooks/useTranslation\";\nimport {fetchCustomPostTypes} from \"../../redux/reducers/fetchCustomPostTypesSlice\";\nimport {metaTitle, refreshPage} from \"../../utils/misc\";\nimport {scrollToTop} from \"../../utils/scroll\";\nimport {wpAjaxRequest} from \"../../utils/ajax\";\nimport {saveCustomPostType} from \"../../redux/reducers/saveCustomPostTypeSlice\";\nimport {toast} from \"react-hot-toast\";\nimport Loader from \"../../components/Loader\";\nimport PageNotFound from \"../404\";\n\nconst SaveCustomPostType = ({}) => {\n\n    // manage global state\n    const dispatch = useDispatch();\n    const {loading} = useSelector(state => state.saveCustomPostType);\n    const {loading: fetchLoading} = useSelector(state => state.fetchCustomPostTypes);\n\n    // manage local state\n    const {postType} = useParams();\n    const {step} = useParams();\n    const [edit, setEdit] = useState(false);\n    const [fetchError, setFetchError] = useState(false);\n    const [stepActive, setStepActive] = useState(step ? parseInt(step) : 0);\n    const [formValues, setFormValues] = useState({});\n    const [isWPGraphQLActive, setIsWPGraphQLActive] = useState(false);\n\n    // manage redirect\n    const navigate = useNavigate();\n\n    if(postType === 'page' || postType === 'post'){\n        navigate('/');\n    }\n\n    // is WPGraphQL active?\n    useEffect(()=>{\n        wpAjaxRequest(\"isWPGraphQLActiveAction\", {})\n            .then(res => {\n                setIsWPGraphQLActive(res.status);\n            })\n            .catch(err => {\n                console.error(err.message);\n            })\n        ;\n    },[]);\n\n    useEffect(() => {\n        if(postType){\n            metaTitle(useTranslation(\"Edit Custom Post Type\"));\n            setEdit(true);\n            dispatch(fetchCustomPostTypes({\n                postType:postType\n            }))\n                .then(res => {\n\n                    if(res.payload.length !== 1){\n                        setFetchError(true);\n                    } else {\n                        setFormValues({\n                            1: {\n                                icon: res.payload[0].icon,\n                                plural_label: res.payload[0].plural,\n                                post_name: res.payload[0].name,\n                                singular_label: res.payload[0].singular,\n                                support_0: res.payload[0].supports.includes('title') ? 'title' : false,\n                                support_1: res.payload[0].supports.includes('editor') ? 'editor' : false,\n                                support_2: res.payload[0].supports.includes('thumbnail') ? 'thumbnail' : false,\n                                support_3: res.payload[0].supports.includes('excerpt') ? 'excerpt' : false,\n                                support_4: res.payload[0].supports.includes('author') ? 'author' : false,\n                                support_5: res.payload[0].supports.includes('trackbacks') ? 'trackbacks' : false,\n                                support_6: res.payload[0].supports.includes('custom-fields') ? 'custom-fields' : false,\n                                support_7: res.payload[0].supports.includes('comments') ? 'comments' : false,\n                                support_8: res.payload[0].supports.includes('revisions') ? 'revisions' : false,\n                                support_9: res.payload[0].supports.includes('page-attributes') ? 'page-attributes' : false,\n                                support_10: res.payload[0].supports.includes('post-formats') ? 'post-formats' : false,\n\n                            },\n                            2: res.payload[0].labels,\n                            3: res.payload[0].settings,\n                        })\n                    }\n                })\n                .catch(err => {\n                    setFetchError(true);\n                    console.error(err);\n                })\n            ;\n        } else {\n            metaTitle(useTranslation(\"Register new Post Type\"));\n        }\n    }, []);\n\n    const title = postType ? useTranslation(\"Edit Custom Post Type\") : useTranslation(\"Create new Custom Post Type\");\n    const crumbs = [\n        {\n            label: useTranslation(\"Registered Custom Post Types\"),\n            link: \"/\"\n        },\n        {\n            label: postType ? useTranslation(\"Edit Custom Post Type\") : useTranslation(\"Create new Custom Post Type\")\n        }\n    ];\n\n    const headings = [\n        {\n            \"label\": useTranslation(\"Basic\"),\n            \"description\": useTranslation(\"Minimum configuration\")\n        },\n        {\n            \"label\": useTranslation(\"Labels\"),\n            \"description\": useTranslation(\"Additional labels\")\n        },\n        {\n            \"label\": useTranslation(\"Settings\"),\n            \"description\": useTranslation(\"Other settings\")\n        }\n    ];\n\n    const handleSubmit = (data, index) => {\n\n        formValues[index] = data;\n        setFormValues(formValues);\n        scrollToTop();\n\n        if(stepActive === 2){\n            dispatch(saveCustomPostType(formValues))\n                .then(res => {\n                    const payload = res.payload;\n\n                    if(payload.success){\n                        navigate('/');\n                        toast.success(useTranslation(\"Custom post type successfully saved. The browser will refresh after 5 seconds.\"));\n                        refreshPage(5000);\n                    } else {\n                        toast.error(payload.error);\n                    }\n                })\n                .catch(err => {\n                    toast.error(err);\n                })\n            ;\n        }\n    };\n\n    if(edit && fetchLoading){\n        return <Loader/>;\n    }\n\n    if(fetchError){\n        return (\n            <PageNotFound />\n        );\n    }\n\n    return (\n        <React.Fragment>\n            <Steps\n                steps={[\n                    <BasicStep\n                        edit={edit}\n                        title={title}\n                        headings={headings}\n                        crumbs={crumbs}\n                        stepActive={stepActive}\n                        setStepActive={setStepActive}\n                        handleSubmit={handleSubmit}\n                        formValues={formValues}\n                    />,\n                    <LabelsStep\n                        edit={edit}\n                        title={title}\n                        headings={headings}\n                        crumbs={crumbs}\n                        stepActive={stepActive}\n                        setStepActive={setStepActive}\n                        handleSubmit={handleSubmit}\n                        formValues={formValues}\n                    />,\n                    <SettingsStep\n                        title={title}\n                        headings={headings}\n                        crumbs={crumbs}\n                        stepActive={stepActive}\n                        setStepActive={setStepActive}\n                        handleSubmit={handleSubmit}\n                        formValues={formValues}\n                        isWPGraphQLActive={isWPGraphQLActive}\n                        loading={loading}\n                    />\n                ]}\n                activeStep={stepActive}\n            />\n        </React.Fragment>\n    );\n};\n\nexport default SaveCustomPostType;"],"sourceRoot":""}