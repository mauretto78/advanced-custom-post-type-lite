{"version":3,"sources":["webpack://advanced-custom-post-type-lite/./assets/src/App/components/Alert/index.js","webpack://advanced-custom-post-type-lite/./assets/src/App/components/Card/CardRow.js","webpack://advanced-custom-post-type-lite/./assets/src/App/components/Card/index.js","webpack://advanced-custom-post-type-lite/./assets/src/App/components/Forms/Checkbox.js","webpack://advanced-custom-post-type-lite/./assets/src/App/components/Forms/Input.js","webpack://advanced-custom-post-type-lite/./assets/src/App/components/Forms/Toggle.js","webpack://advanced-custom-post-type-lite/./assets/src/App/components/Steps/StepsHeader.js","webpack://advanced-custom-post-type-lite/./assets/src/App/components/Steps/StepsHeaderElement.js","webpack://advanced-custom-post-type-lite/./assets/src/App/components/Steps/index.js","webpack://advanced-custom-post-type-lite/./assets/src/App/pages/404/index.js","webpack://advanced-custom-post-type-lite/./assets/src/App/utils/validation.js"],"names":["Alert","style","children","propTypes","PropTypes","oneOf","Object","values","styleVariants","isRequired","CardRow","label","value","wizard","__html","string","element","Card","title","actions","documentGlobals","document","globals","is_rtl","Checkbox","id","description","validate","register","errors","error","keys","map","keyName","index","message","arrayOf","object","func","array","Input","innerRef","type","size","placeholder","defaultValue","step","min","max","readOnly","onClick","onChangeCapture","disabled","bool","number","Toggle","StepsHeader","stepActive","headings","heading","shape","StepsHeaderElement","getClassName","className","Steps","steps","activeStep","realActiveStep","length","PageNotFound","link","WARNING","alphanumericallyValid","matches","match","isPostTypeNameValid","post_name","asyncIsPostTypeNameValid","postType","res","exists","isTaxonomySlugValid","slug","asyncIsTaxonomySlugValid","isAValidValueForThisType","options","fieldTypes","COLOR","validColor","CURRENCY","validCurrency","DATE","validDate","EMAIL","validEmail","WEIGHT","LENGTH","NUMBER","validNumber","PHONE","validPhone","CHECKBOX","RADIO","SELECT","SELECT_MULTI","validSelect","TOGGLE","validToggle","URL","validURL","str","re","test","pattern","RegExp","forEach","o","validWPGraphQLName","name","validateGoogleMapsApiKey","key","regx"],"mappings":"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","file":"893.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {styleVariants} from \"../../constants/styles\";\n\nconst Alert = ({style = 'default', children}) => {\n    return (\n        <div className={`acpt-alert acpt-alert-${style}`}>\n            {children}\n        </div>\n    );\n};\n\nAlert.propTypes = {\n    style: PropTypes.oneOf(Object.values(styleVariants)).isRequired\n};\n\nexport default Alert;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CardRow = ({label, value, wizard}) => {\n\n    return (\n        <div className=\"acpt-card-row\">\n            <span className=\"label\">\n                <span>{label}</span>\n                {wizard && (\n                    <div\n                        className=\"wizard\"\n                        dangerouslySetInnerHTML={{__html: wizard}}\n                    />\n                )}\n            </span>\n            <span className=\"value\">\n                {value}\n            </span>\n        </div>\n    );\n};\n\nCardRow.propTypes = {\n    label: PropTypes.string.isRequired,\n    value: PropTypes.element.isRequired,\n    wizard: PropTypes.string,\n};\n\nexport default CardRow;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Card = ({title, style = 'with-shadow', actions, children}) => {\n\n    const documentGlobals = document.globals;\n    const globals = documentGlobals.globals;\n\n    return (\n        <div className={`acpt-card ${globals.is_rtl === true ? `rtl` : ``} ${style}`}>\n            {title && (\n                <div className=\"acpt-card-header\">\n                    <h3>{title}</h3>\n                    {actions && (\n                        <div className=\"actions\">\n                            {actions}\n                        </div>\n                    )}\n                </div>\n            )}\n            <div className=\"acpt-card-body\">\n                <div className=\"responsive\">\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nCard.propTypes = {\n    title: PropTypes.string,\n    style: PropTypes.string,\n    actions: PropTypes.element,\n};\n\nexport default Card;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {get} from 'react-hook-form';\nimport useTranslation from \"../../hooks/useTranslation\";\n\nconst Checkbox = ({id, values, description, validate, register, errors}) => {\n\n    const error = get(errors, id);\n\n    return (\n        <React.Fragment>\n            <div className=\"flex-column s-8\">\n                {Object.keys(values).map((keyName, index) => (\n                    <label className=\"checkbox\" htmlFor={`${id}_${index}`}>\n                        <input\n                            name={id}\n                            value={values[keyName]['value']}\n                            defaultChecked={values[keyName]['checked']}\n                            aria-invalid={error ? \"true\" : \"false\"}\n                            type=\"checkbox\"\n                            id={`${id}_${index}`}\n                            {...register(`${id}_${index}`, {...validate})}\n                        />\n                        <span>\n                            {useTranslation(keyName)}\n                        </span>\n                    </label>\n                ))}\n                {error && <div className=\"invalid-feedback\">{error.message}</div>}\n            </div>\n            {description && (\n                <div className=\"form-description\">{description}</div>\n            )}\n            {error && <div className=\"invalid-feedback\">{error.message}</div>}\n        </React.Fragment>\n    );\n};\n\nCheckbox.propTypes = {\n    id: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    values: PropTypes.arrayOf(PropTypes.object).isRequired,\n    validate: PropTypes.func,\n    register: PropTypes.func.isRequired,\n    errors: PropTypes.array.isRequired,\n};\n\nexport default Checkbox;\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {get} from 'react-hook-form';\n\nconst Input = ({innerRef, type = 'text', size= 'default', placeholder, id, defaultValue, description, step, min, max, readOnly, onClick, onChangeCapture, validate, register, errors, disabled = false}) => {\n\n    const error = get(errors, id);\n\n    return (\n        <React.Fragment>\n            <input\n                ref={innerRef}\n                id={id}\n                data-cy={`input-${id}`}\n                name={id}\n                type={type}\n                disabled={disabled}\n                min={min ? min : 0}\n                max={max}\n                step={step ? min : 1}\n                defaultValue={defaultValue}\n                placeholder={placeholder}\n                onChangeCapture={onChangeCapture}\n                onClick={onClick}\n                readOnly={readOnly}\n                aria-invalid={error ? \"true\" : \"false\"}\n                className={`form-control ${size} ${error ? 'has-errors': ''}`}\n                {...register(id, validate)}\n            />\n            {error && <div data-cy={`input-error-${id}`} className=\"invalid-feedback\">{error.message}</div>}\n            {description && (\n                <div className=\"form-description\">{description}</div>\n            )}\n        </React.Fragment>\n    );\n};\n\nInput.propTypes = {\n    id: PropTypes.string.isRequired,\n    size: PropTypes.oneOf([\n        'default',\n        'sm',\n    ]),\n    innerRef: PropTypes.func,\n    placeholder: PropTypes.string,\n    defaultValue: PropTypes.string,\n    description: PropTypes.string,\n    readOnly: PropTypes.bool,\n    min: PropTypes.number,\n    max: PropTypes.number,\n    step: PropTypes.number,\n    onChangeCapture: PropTypes.func,\n    validate: PropTypes.func,\n    register: PropTypes.func.isRequired,\n    errors: PropTypes.array.isRequired,\n    disabled: PropTypes.bool,\n    type: PropTypes.oneOf([\n        'text',\n        'email',\n        'number',\n        'tel',\n        'url',\n        'date',\n        'time',\n    ]),\n\n};\n\nexport default Input;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {get} from 'react-hook-form';\n\nconst Toggle = ({id, defaultValue = 0, description, validate, register, errors}) => {\n\n    const error = get(errors, id);\n\n    return (\n        <div className=\"toggle-group\">\n            <label\n                data-cy={`toggle-${id}`}\n                className=\"toggle\"\n            >\n                <input\n                    id={id}\n                    name={id}\n                    type=\"checkbox\"\n                    data-cy={`toggle-checkbox-${id}`}\n                    defaultChecked={defaultValue}\n                    {...register(id, validate)}\n                />\n                <span className=\"slider round\"/>\n            </label>\n            {description && (\n                <span className=\"form-description\">{description}</span>\n            )}\n            {error && <div className=\"invalid-feedback\">{error.message}</div>}\n        </div>\n    );\n};\n\nToggle.propTypes = {\n    id: PropTypes.string.isRequired,\n    defaultValue: PropTypes.bool,\n    description: PropTypes.string,\n    validate: PropTypes.func,\n    register: PropTypes.func.isRequired,\n    errors: PropTypes.array.isRequired,\n};\n\nexport default Toggle;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport StepsHeaderElement from \"./StepsHeaderElement\";\n\nconst StepsHeader = ({stepActive, headings}) => {\n\n    const documentGlobals = document.globals;\n    const globals = documentGlobals.globals;\n\n    return (\n        <div className={`acpt-steps ${globals.is_rtl === true ? `rtl` : ``}`}>\n            {headings.map((heading, index) => (\n                <StepsHeaderElement heading={heading} index={index} stepActive={stepActive} />\n            ))}\n        </div>\n    );\n};\n\nStepsHeader.propTypes = {\n    stepActive: PropTypes.number.isRequired,\n    headings: PropTypes.arrayOf(PropTypes.shape({\n        label:  PropTypes.string.isRequired,\n        description:  PropTypes.string.isRequired,\n    })).isRequired,\n};\n\nexport default StepsHeader;","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nconst StepsHeaderElement = ({heading, stepActive, index}) => {\n\n    const getClassName = () => {\n        let className = 'acpt-steps-heading';\n\n        if(index === stepActive){\n            className += ' active';\n        } else if(stepActive > index){\n            className += ' done';\n        } else {\n            className += ' undone';\n        }\n\n        return className;\n    };\n\n    return (\n        <div className={getClassName()}>\n            <div className=\"number\">{index+1}</div>\n            <h3 className=\"title\">{heading.title}</h3>\n            {heading.description && <div className=\"description\">\n                {heading.description}\n            </div>}\n        </div>\n    );\n};\n\nStepsHeaderElement.propTypes = {\n    index: PropTypes.number.isRequired,\n    stepActive: PropTypes.number.isRequired,\n    heading: PropTypes.shape({\n        label:  PropTypes.string.isRequired,\n        description:  PropTypes.string.isRequired,\n    }).isRequired,\n};\n\nexport default StepsHeaderElement;","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nconst Steps = ({steps, activeStep = 0}) => {\n\n\n    const realActiveStep = () => {\n\n        if(activeStep < 0){\n            return 0;\n        }\n\n        if(activeStep > steps.length){\n            return steps.length;\n        }\n\n        return activeStep;\n    };\n\n    if(!steps[realActiveStep()]){\n        return null;\n    }\n\n    return (\n        <div>\n            {steps[realActiveStep()]}\n        </div>\n    );\n};\n\nSteps.propTypes = {\n    activeStep: PropTypes.number,\n    steps: PropTypes.arrayOf(PropTypes.element).isRequired\n};\n\nexport default Steps;","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport Layout from \"../../layout/Layout\";\nimport useTranslation from \"../../hooks/useTranslation\";\nimport Alert from \"../../components/Alert\";\nimport {styleVariants} from \"../../constants/styles\";\n\n\nconst PageNotFound = () => {\n\n    return (\n        <Layout\n            crumbs={[\n                {\n                    label: useTranslation(\"Registered Custom Post Types\"),\n                    link: \"/\"\n                },\n                {\n                    label: useTranslation(\"Page not found\")\n                }\n            ]}\n            title={useTranslation('Page not found')}\n        >\n            <Alert style={styleVariants.WARNING}>\n                {useTranslation('The requested page was not found, was deleted or was moved!')}\n            </Alert>\n            <Link\n                className=\"mt-12\"\n                to=\"/\"\n            >\n                {useTranslation('Return back to list')}\n            </Link>\n        </Layout>\n    );\n};\n\nexport default PageNotFound;","/**\n * validate a value for a given field type\n *\n * @param type\n * @param value\n * @return {boolean}\n */\nimport {fieldTypes} from \"../constants/fields\";\nimport {wpAjaxRequest} from \"./ajax\";\nimport useTranslation from \"../hooks/useTranslation\";\n\nexport const alphanumericallyValid = (string) => {\n\n    const matches = string.match(/^[0-9a-zA-Z_-]+$/g);\n\n    if (matches === null) {\n        return 'Only alphanumeric characters allowed';\n    }\n\n    return true;\n};\n\n/**\n * Keys are used as internal identifiers. Lowercase alphanumeric characters, dashes, and underscores are allowed.\n * https://developer.wordpress.org/reference/functions/sanitize_key/\n *\n * @param post_name\n * @returns {boolean}\n */\nexport const isPostTypeNameValid = (post_name) => {\n\n    const size = post_name.length;\n\n    if (size > 20) {\n        return 'Max post type name lenght is 20';\n    }\n\n    const matches = post_name.match(/[a-z0-9_-]/g);\n\n    if (matches === null || size !== matches.length) {\n        return 'Allowed characters: [Lowercase alphanumeric characters, dashes, and underscores]';\n    }\n\n    return true;\n};\n\nexport const asyncIsPostTypeNameValid = async (post_name) => {\n\n    const size = post_name.length;\n\n    if (size > 20) {\n        return 'Max post type name lenght is 20';\n    }\n\n    const matches = post_name.match(/[a-z0-9_-]/g);\n\n    if (matches === null || size !== matches.length) {\n        return 'Allowed characters: [Lowercase alphanumeric characters, dashes, and underscores]';\n    }\n\n    // check if already exists\n    const res = await wpAjaxRequest(\"checkPostTypeNameAction\", {postType: post_name});\n\n    if(res.exists === true){\n        return post_name + ' post type already exists.';\n    }\n\n    return true;\n};\n\nexport const isTaxonomySlugValid = async (slug) => {\n\n    const size = slug.length;\n\n    if (size > 32) {\n        return 'Max post type name lenght is 32';\n    }\n\n    const matches = slug.match(/[a-z0-9_-]/g);\n\n    if (matches === null || size !== matches.length) {\n        return 'Allowed characters: [Lowercase alphanumeric characters, dashes, and underscores]';\n    }\n\n    return true;\n};\n\nexport const asyncIsTaxonomySlugValid = async (slug) => {\n\n    const size = slug.length;\n\n    if (size > 32) {\n        return 'Max post type name lenght is 32';\n    }\n\n    const matches = slug.match(/[a-z0-9_-]/g);\n\n    if (matches === null || size !== matches.length) {\n        return 'Allowed characters: [Lowercase alphanumeric characters, dashes, and underscores]';\n    }\n\n    // check if already exists\n    const res = await wpAjaxRequest(\"checkTaxonomySlugAction\", {slug: slug});\n\n    if (res.exists === true) {\n        return slug + ' taxonomy already exists.';\n    }\n\n    return true;\n};\n\nexport const isAValidValueForThisType = (type, value, options) => {\n\n    if(typeof value === 'undefined' || value === null || value === ''){\n        return true;\n    }\n\n    if(value.length > 50){\n        return false;\n    }\n\n    switch (type ) {\n        case fieldTypes.COLOR:\n            return validColor(value);\n\n        case fieldTypes.CURRENCY:\n            return validCurrency(value);\n\n        case fieldTypes.DATE:\n            return validDate(value);\n\n        case fieldTypes.EMAIL:\n            return validEmail(value);\n\n        case fieldTypes.WEIGHT:\n        case fieldTypes.LENGTH:\n        case fieldTypes.NUMBER:\n            return validNumber(value);\n\n        case fieldTypes.PHONE:\n            return validPhone(value);\n\n        case fieldTypes.CHECKBOX:\n        case fieldTypes.RADIO:\n        case fieldTypes.SELECT:\n        case fieldTypes.SELECT_MULTI:\n            return validSelect(value, options);\n\n        case fieldTypes.TOGGLE:\n            return validToggle(value);\n\n        case fieldTypes.URL:\n            return validURL(value);\n\n        default:\n            return true;\n    }\n};\n\n/**\n *\n * @param str\n * @return {boolean}\n */\nexport const validEmail = (str) => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    return re.test(str);\n};\n\n/**\n *\n * @param str\n * @return {boolean}\n */\nexport const validURL = (str) => {\n    const pattern = new RegExp( '^(https?:\\\\/\\\\/)?' + // protocol\n        '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n        '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n        '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n        '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n        '(\\\\#[-a-z\\\\d_]*)?$', 'i' ); // fragment locator\n\n    return !!pattern.test(str);\n};\n\n/**\n *\n * @param str\n * @return {boolean}\n */\nexport const validCurrency = (str) => {\n\n    const re = /^[0-9]{1,}.[0-9]{2}$/i;\n\n    return re.test(str);\n};\n\n/**\n *\n * @param str\n * @return {boolean}\n */\nexport const validNumber = (str) => {\n    const re = /^[0-9]{1,}$/i;\n\n    return re.test(str);\n};\n\n/**\n *\n * @param str\n * @return {boolean}\n */\nexport const validPhone = (str) => {\n    const re = /^\\+?([0-9]{2,3})\\)?[-. ]?([0-9-. ]{6,15})$/;\n\n    return re.test(str);\n};\n\n/**\n *\n * @param str\n * @return {boolean}\n */\nexport const validColor = (str) => {\n    const re = /^#[a-f0-9]{6}$/i;\n\n    return re.test(str);\n};\n\n/**\n *\n * @param str\n * @return {boolean}\n */\nexport const validDate = (str) => {\n    const re = /(?:(?:31(\\/|-|\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\/|-|\\.)(?:0?[13-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\/|-|\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})/gi;\n\n    return re.test(str);\n};\n\n/**\n *\n * @param str\n * @return {boolean}\n */\nexport const validToggle = (str) => {\n    const re = /^[0-1]{1}$/i;\n\n    return re.test(str);\n};\n\n/**\n *\n * @param value\n * @param options\n * @return {boolean}\n */\nexport const validSelect = (value, options) => {\n\n    if(value === null || value === ''){\n        return true;\n    }\n\n    if(options == null || options.length === 0){\n        return false;\n    }\n\n    let matches = 0;\n\n    options.forEach((o) => {\n        if(o.value === value){\n            matches++;\n        }\n    });\n\n    return matches > 0;\n};\n\nexport const validWPGraphQLName = (name) => {\n\n    if (null === name.match(/^[a-z]/)) {\n        return \"The string needs to start with a letter.\";\n    }\n\n    if (null ===  name.match(/^[0-9a-zA-Z]+$/)) {\n        return \"The string needs to be alphanumeric (camelcase).\";\n    }\n};\n\n/**\n *\n * @param key\n * @return {string|boolean}\n */\nexport const validateGoogleMapsApiKey = (key) => {\n\n    if(typeof key === 'undefined' ||  key === null || key === '' || key.length === 0){\n        return  true;\n    }\n\n    if(key.length !== 39){\n        return useTranslation('Key length must be 39.');\n    }\n\n    const regx = new RegExp( \"^[A-Za-z0-9-_]+$\" );\n\n    if(!regx.test(key)){\n        return useTranslation('Not valid format.');\n    }\n\n    return true;\n};"],"sourceRoot":""}