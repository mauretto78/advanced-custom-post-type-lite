{"version":3,"sources":["webpack://advanced-custom-post-type-lite/./assets/src/App/components/pages/DeleteCustomPostType/index.js","webpack://advanced-custom-post-type-lite/./assets/src/App/components/reusable/Layout/Breadcrumbs/Breadcrumb.js","webpack://advanced-custom-post-type-lite/./assets/src/App/components/reusable/Layout/Breadcrumbs/index.js","webpack://advanced-custom-post-type-lite/./assets/src/App/redux/thunks/deletePostType.js","webpack://advanced-custom-post-type-lite/./assets/src/App/utils/misc.js"],"names":["DeleteCustomPostType","dispatch","state","deleteCustomPostTypeReducer","errors","success","loading","fetchSettingsReducer","settingsLoading","settings","fetched","deletePostsOption","value","postType","didMountRef","history","push","handleDeleteCustomPostType","mode","current","toast","length","map","error","buttons","label","link","Breadcrumb","isLast","Breadcrumbs","crumbs","crumb","index","deletePostType","getState","res","metaTitle","title","originalDocumentTitle","document","split","changeCurrentAdminMenuLink","menuWrapper","querySelector","childNodes","forEach","currentValue","currentIndex","listObj","links","getElementsByTagName","i","elem","href","getAttribute","toCompare","classList","add","remove","refreshPage","timeout","setTimeout","window","location","reload"],"mappings":"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","file":"455.js","sourcesContent":["import React, {useEffect, useRef} from 'react';\nimport Breadcrumbs from \"../../reusable/Layout/Breadcrumbs\";\nimport {Link, useHistory, useParams} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {deletePostType} from \"../../../redux/thunks/deletePostType\";\nimport {toast} from \"react-toastify\";\nimport {metaTitle, refreshPage} from \"../../../utils/misc\";\nimport {filterByLabel} from \"../../../utils/objects\";\nimport Layout from \"../../reusable/Layout\";\nimport ActionsBar from \"../../reusable/Layout/ActionsBar\";\n\nconst DeleteCustomPostType = () => {\n\n    // manage global state\n    const dispatch = useDispatch();\n    const {errors, success, loading} = useSelector(state => state.deleteCustomPostTypeReducer);\n    const {loading: settingsLoading, fetched: settings} = useSelector(state => state.fetchSettingsReducer);\n    const deletePostsOption = filterByLabel(settings, 'key', 'delete_posts').value;\n\n    // manage local state\n    const {postType} = useParams();\n    const didMountRef = useRef(false);\n\n    useEffect(() => {\n        metaTitle(`Delete ${postType} custom post type`);\n    }, []);\n\n    // manage redirect\n    const history = useHistory();\n\n    if(postType === 'page' || postType === 'post'){\n        history.push('/');\n    }\n\n    // manage delete\n    const handleDeleteCustomPostType = async (postType, mode) => {\n        await dispatch(deletePostType(postType, mode));\n    };\n\n    // handle delete outcome\n    useEffect(() => {\n        if (didMountRef.current){\n            if(!loading){\n                if(success){\n                    history.push('/');\n                    toast.success(\"Custom post type successfully deleted. The browser will refresh after 5 seconds.\");\n                    refreshPage(5000);\n                }\n\n                if(errors.length > 0){\n                    errors.map((error) => {\n                        toast.error(error);\n                    });\n                }\n            }\n        } else {\n            didMountRef.current = true;\n        }\n    }, [loading]);\n\n    const buttons = (\n        <React.Fragment>\n            <a className=\"acpt-btn acpt-btn-danger\" onClick={ e => handleDeleteCustomPostType(postType, 'all') }>\n                Yes, Delete it\n            </a>\n            <Link\n                to=\"/\"\n                className=\"acpt-btn acpt-btn-primary-o\"\n            >\n                Return back to list\n            </Link>\n        </React.Fragment>\n    );\n\n    return (\n        <Layout>\n            <ActionsBar\n                title={`Delete ${postType}`}\n                actions={buttons}\n            />\n            <main>\n                <Breadcrumbs crumbs={[\n                    {\n                        label: \"Advanced custom post types\",\n                        link: \"/\"\n                    },\n                    {\n                        label: 'Delete custom post type'\n                    }\n                ]} />\n                <h3 className=\"no-space acpt-alert acpt-alert-warning\">\n                    You are going to delete <strong>{postType} </strong> custom post type. Are you sure?\n                </h3>\n                {deletePostsOption === \"1\" && (\n                    <strong className=\"\">\n                        WARNING: This action will delete all {postType} posts and metadata. The action is irreversible.\n                    </strong>\n                )}\n            </main>\n        </Layout>\n    );\n};\n\nexport default DeleteCustomPostType;","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport {Icon} from \"@iconify/react\";\n\nconst Breadcrumb = ({label, link, isLast}) => {\n\n    return (\n        <React.Fragment>\n            <li className={isLast ? 'current' : ''}>\n                {link ?\n                    <Link to={link}>\n                        {label}\n                    </Link>\n                    :\n                    label\n                }\n            </li>\n            {!isLast && (\n                <span className=\"separator\">\n                    <Icon icon=\"bx:bx-chevron-right\" color=\"#aaa\" width=\"18px\" />\n                </span>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default Breadcrumb;","import React from 'react';\nimport Breadcrumb from \"./Breadcrumb\";\n\nconst Breadcrumbs = ({crumbs}) => {\n    return (\n        <div className=\"acpt-breadcrumbs\">\n            {crumbs.length > 0 && (\n                <ul>\n                    {crumbs.map((crumb, index) => (\n                        <Breadcrumb\n                            label={crumb.label}\n                            link={crumb.link}\n                            isLast={(index+1) === crumbs.length}\n                            key={index}\n                        />\n                    ))}\n                </ul>\n            )}\n        </div>\n    );\n};\n\nexport default Breadcrumbs;","import {wpAjaxRequest} from \"../../utils/ajax\";\nimport {deletePostTypeFailure, deletePostTypeInProgress, deletePostTypeSuccess} from \"../actions/deleteCustomPostTypeActions\";\n\nexport const deletePostType = (postType, mode) => async (dispatch, getState) => {\n    try {\n        dispatch(deletePostTypeInProgress(postType, mode));\n        const res = await wpAjaxRequest('deleteCustomPostTypeAction', postType ? {postType:postType, mode:mode} : {} );\n        (res.success === true) ? dispatch(deletePostTypeSuccess()) : dispatch(deletePostTypeFailure(res.error)) ;\n    } catch ( e ) {\n        dispatch(deletePostTypeFailure(e));\n    }\n};\n","/**\n * Change document's <title>\n * @param title\n */\nexport const metaTitle = (title) => {\n    const originalDocumentTitle = document.title.split(\"‹\");\n    document.title = `${title} ‹ ${originalDocumentTitle[1]}`;\n};\n\n/**\n * Add current class to admin menu link\n * @param link\n */\nexport const changeCurrentAdminMenuLink = (link) => {\n\n    const menuWrapper = document.querySelector('#toplevel_page_advanced-custom-post-type-lite .wp-submenu');\n\n    menuWrapper.childNodes.forEach((currentValue, currentIndex, listObj) => {\n        const links = currentValue.getElementsByTagName('a');\n\n        for(let i = 0; i < links.length; i++) {\n            let elem = links[i];\n            let href = elem.getAttribute(\"href\");\n            let toCompare = 'admin.php?page=advanced-custom-post-type-lite'+link;\n\n            if( toCompare === href ){\n                currentValue.classList.add(\"current\");\n            } else {\n                currentValue.classList.remove(\"current\");\n            }\n        }\n    });\n};\n\nexport const refreshPage = (timeout = 0) => {\n    setTimeout(function () {\n        window.location.reload();\n    }, timeout);\n};"],"sourceRoot":""}