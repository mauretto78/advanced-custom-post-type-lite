/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkadvanced_custom_post_type_lite"] = self["webpackChunkadvanced_custom_post_type_lite"] || []).push([[489],{

/***/ 8053:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var map = {\n\t\"./en.js\": 3167\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8053;\n\n//# sourceURL=webpack://advanced-custom-post-type-lite/./assets/src/App/localization/locales/_sync_^\\.\\/.*\\.js$?");

/***/ }),

/***/ 740:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n\nvar _react = __webpack_require__(7294);\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar CustomPostTypesMiniTable = function CustomPostTypesMiniTable(_ref) {\n    var taxonomy = _ref.taxonomy,\n        elements = _ref.elements;\n\n\n    return wp.element.createElement(\n        \"div\",\n        { className: \"acpt-table-responsive\" },\n        wp.element.createElement(\n            \"table\",\n            { className: \"acpt-minitable\" },\n            wp.element.createElement(\n                \"thead\",\n                null,\n                wp.element.createElement(\n                    \"tr\",\n                    null,\n                    wp.element.createElement(\n                        \"th\",\n                        null,\n                        \"CPT\"\n                    ),\n                    wp.element.createElement(\n                        \"th\",\n                        null,\n                        \"Sing. label\"\n                    ),\n                    wp.element.createElement(\n                        \"th\",\n                        null,\n                        \"Plural label\"\n                    ),\n                    wp.element.createElement(\n                        \"th\",\n                        null,\n                        \"Post count\"\n                    )\n                )\n            ),\n            wp.element.createElement(\n                \"tbody\",\n                null,\n                elements.map(function (element) {\n                    return wp.element.createElement(\n                        \"tr\",\n                        null,\n                        wp.element.createElement(\n                            \"td\",\n                            null,\n                            element.name\n                        ),\n                        wp.element.createElement(\n                            \"td\",\n                            null,\n                            element.singular\n                        ),\n                        wp.element.createElement(\n                            \"td\",\n                            null,\n                            element.plural\n                        ),\n                        wp.element.createElement(\n                            \"td\",\n                            null,\n                            wp.element.createElement(\n                                \"span\",\n                                { className: \"acpt-badge\" },\n                                wp.element.createElement(\n                                    \"span\",\n                                    { className: \"label\" },\n                                    element.postCount ? element.postCount : 0\n                                )\n                            )\n                        )\n                    );\n                })\n            )\n        ),\n        wp.element.createElement(\n            \"div\",\n            { className: \"minitable-buttons\" },\n            wp.element.createElement(\n                \"a\",\n                { href: \"#/assoc-post-taxonomy/\" + taxonomy },\n                \"Manage\"\n            )\n        )\n    );\n};\n\nexports.default = CustomPostTypesMiniTable;\n\n//# sourceURL=webpack://advanced-custom-post-type-lite/./assets/src/App/components/pages/TaxonomyList/CustomPostTypesMiniTable.js?");

/***/ }),

/***/ 272:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n\nvar _react = __webpack_require__(7294);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactRouterDom = __webpack_require__(3727);\n\nvar _objects = __webpack_require__(4040);\n\nvar _Tippy = __webpack_require__(5825);\n\nvar _Tippy2 = _interopRequireDefault(_Tippy);\n\nvar _CustomPostTypeLabel = __webpack_require__(54);\n\nvar _CustomPostTypeLabel2 = _interopRequireDefault(_CustomPostTypeLabel);\n\nvar _CustomPostTypesMiniTable = __webpack_require__(740);\n\nvar _CustomPostTypesMiniTable2 = _interopRequireDefault(_CustomPostTypesMiniTable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar TaxonomyListElement = function TaxonomyListElement(_ref) {\n    var id = _ref.id,\n        element = _ref.element,\n        handleDeleteTemplate = _ref.handleDeleteTemplate;\n\n\n    return wp.element.createElement(\n        _react2.default.Fragment,\n        null,\n        wp.element.createElement(\n            \"tr\",\n            null,\n            wp.element.createElement(\n                \"td\",\n                { className: \"backend\" },\n                wp.element.createElement(\n                    \"div\",\n                    { className: \"m-0 mb-1\" },\n                    wp.element.createElement(\n                        \"strong\",\n                        null,\n                        element.slug\n                    ),\n                    !element.isNative && wp.element.createElement(\n                        \"div\",\n                        { className: \"element-buttons\" },\n                        wp.element.createElement(\n                            \"a\",\n                            { href: \"#/view_taxonomy/\" + element.slug },\n                            \"View\"\n                        ),\n                        \"\\xA0\",\n                        wp.element.createElement(\n                            \"a\",\n                            { href: \"#/edit_taxonomy/\" + element.slug },\n                            \"Edit\"\n                        ),\n                        \"\\xA0\",\n                        wp.element.createElement(\n                            \"a\",\n                            { href: \"#/delete_taxonomy/\" + element.slug },\n                            \"Delete\"\n                        )\n                    )\n                )\n            ),\n            wp.element.createElement(\n                \"td\",\n                null,\n                wp.element.createElement(_CustomPostTypeLabel2.default, { element: element })\n            ),\n            wp.element.createElement(\"td\", null),\n            wp.element.createElement(\n                \"td\",\n                null,\n                (0, _objects.isset)(element, \"customPostTypes\") && element.customPostTypes.length > 0 ? wp.element.createElement(\n                    _Tippy2.default,\n                    {\n                        placement: \"top\",\n                        html: wp.element.createElement(_CustomPostTypesMiniTable2.default, { taxonomy: element.slug, elements: element.customPostTypes })\n                    },\n                    wp.element.createElement(\n                        _reactRouterDom.Link,\n                        {\n                            to: \"/assoc-post-taxonomy/\" + element.slug,\n                            className: \"acpt-btn no-border acpt-btn-sm acpt-btn-info-o\"\n                        },\n                        \"Manage\"\n                    )\n                ) : wp.element.createElement(\n                    _reactRouterDom.Link,\n                    {\n                        to: \"/assoc-post-taxonomy/\" + element.slug,\n                        className: \"acpt-btn no-border acpt-btn-sm acpt-btn-primary-o\"\n                    },\n                    \"Associate\"\n                )\n            ),\n            wp.element.createElement(\n                \"td\",\n                { className: \"with-border\" },\n                wp.element.createElement(\n                    \"span\",\n                    { className: \"acpt-badge\" },\n                    wp.element.createElement(\n                        \"span\",\n                        { className: \"label\" },\n                        element.postCount\n                    )\n                )\n            ),\n            wp.element.createElement(\n                \"td\",\n                { className: \"frontend\" },\n                wp.element.createElement(\n                    \"a\",\n                    {\n                        className: \"acpt-btn no-border acpt-btn-sm acpt-btn-primary-o text-danger\",\n                        href: \"https://acpt.io/checkout\",\n                        target: \"_blank\"\n                    },\n                    \"Buy a PRO license\"\n                )\n            )\n        )\n    );\n};\n\nexports.default = TaxonomyListElement;\n\n//# sourceURL=webpack://advanced-custom-post-type-lite/./assets/src/App/components/pages/TaxonomyList/TaxonomyListElement.js?");

/***/ }),

/***/ 7489:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _react = __webpack_require__(7294);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _misc = __webpack_require__(3154);\n\nvar _Breadcrumbs = __webpack_require__(5827);\n\nvar _Breadcrumbs2 = _interopRequireDefault(_Breadcrumbs);\n\nvar _reactRedux = __webpack_require__(4494);\n\nvar _reactRouterDom = __webpack_require__(3727);\n\nvar _Spinner = __webpack_require__(7410);\n\nvar _Spinner2 = _interopRequireDefault(_Spinner);\n\nvar _fetchTaxonomiesCount = __webpack_require__(2081);\n\nvar _fetchTaxonomies = __webpack_require__(1141);\n\nvar _Pagination = __webpack_require__(1222);\n\nvar _Pagination2 = _interopRequireDefault(_Pagination);\n\nvar _TaxonomyListElement = __webpack_require__(272);\n\nvar _TaxonomyListElement2 = _interopRequireDefault(_TaxonomyListElement);\n\nvar _react3 = __webpack_require__(6229);\n\nvar _Tippy = __webpack_require__(5825);\n\nvar _Tippy2 = _interopRequireDefault(_Tippy);\n\nvar _localization = __webpack_require__(8525);\n\nvar _objects = __webpack_require__(4040);\n\nvar _Layout = __webpack_require__(3067);\n\nvar _Layout2 = _interopRequireDefault(_Layout);\n\nvar _ActionsBar = __webpack_require__(3700);\n\nvar _ActionsBar2 = _interopRequireDefault(_ActionsBar);\n\nvar _metaTypes = __webpack_require__(895);\n\nvar _reactToastify = __webpack_require__(9249);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar TaxonomyList = function TaxonomyList() {\n\n    // manage global state\n    var dispatch = (0, _reactRedux.useDispatch)();\n\n    var _useSelector = (0, _reactRedux.useSelector)(function (state) {\n        return state.fetchTaxonomiesReducer;\n    }),\n        fetched = _useSelector.fetched,\n        loading = _useSelector.loading;\n\n    var _useSelector2 = (0, _reactRedux.useSelector)(function (state) {\n        return state.fetchTaxonomiesCountReducer;\n    }),\n        fetchedCount = _useSelector2.fetched,\n        loadingCount = _useSelector2.loading;\n\n    var _useSelector3 = (0, _reactRedux.useSelector)(function (state) {\n        return state.fetchSettingsReducer;\n    }),\n        settingsLoading = _useSelector3.loading,\n        settings = _useSelector3.fetched;\n\n    // manage local state\n\n\n    var _useParams = (0, _reactRouterDom.useParams)(),\n        page = _useParams.page;\n\n    var didMountRef = (0, _react.useRef)(false);\n\n    var _useState = (0, _react.useState)(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        fetchedSuccess = _useState2[0],\n        setFetchedSuccess = _useState2[1];\n\n    var perPage = settings.length > 0 && (0, _objects.filterByLabel)(settings, 'key', 'records_per_page') !== '' ? (0, _objects.filterByLabel)(settings, 'key', 'records_per_page').value : 20;\n    var totalPages = Math.ceil(fetchedCount / perPage);\n    var history = (0, _reactRouterDom.useHistory)();\n\n    (0, _react.useEffect)(function () {\n        (0, _misc.metaTitle)((0, _localization.translate)(\"taxonomy_list.title\"));\n        (0, _misc.changeCurrentAdminMenuLink)('#/taxonomies');\n        dispatch((0, _fetchTaxonomiesCount.fetchTaxonomiesCount)());\n        dispatch((0, _fetchTaxonomies.fetchTaxonomies)({\n            page: page ? page : 1,\n            perPage: perPage\n        }));\n    }, [page]);\n\n    // handle fetch outcome\n    (0, _react.useEffect)(function () {\n        if (didMountRef.current) {\n            if (!loading && !settingsLoading) {\n                setFetchedSuccess(true);\n            }\n        } else {\n            didMountRef.current = true;\n        }\n    }, [loading]);\n\n    if (!fetchedSuccess) {\n        return wp.element.createElement(_Spinner2.default, null);\n    }\n\n    var button = wp.element.createElement(\n        _reactRouterDom.Link,\n        {\n            className: \"acpt-btn acpt-btn-primary\",\n            to: \"/register_taxonomy\"\n        },\n        \"Register new Taxonomy\"\n    );\n\n    return wp.element.createElement(\n        _Layout2.default,\n        null,\n        wp.element.createElement(_ActionsBar2.default, {\n            title: \"Registered Taxonomies\",\n            actions: button\n        }),\n        wp.element.createElement(\n            \"main\",\n            null,\n            wp.element.createElement(_Breadcrumbs2.default, { crumbs: [{\n                    label: \"Registered Taxonomies\"\n                }] }),\n            fetched.length > 0 ? wp.element.createElement(\n                \"div\",\n                { className: \"acpt-card\" },\n                wp.element.createElement(\n                    \"div\",\n                    { className: \"acpt-card__header\" },\n                    wp.element.createElement(\n                        \"div\",\n                        { className: \"acpt-card__inner\" },\n                        fetchedCount,\n                        \" record(s) found\"\n                    )\n                ),\n                wp.element.createElement(\n                    \"div\",\n                    { className: \"acpt-card__body\" },\n                    wp.element.createElement(\n                        \"div\",\n                        { className: \"acpt-table-responsive\" },\n                        wp.element.createElement(\n                            \"table\",\n                            { className: \"acpt-table\" },\n                            wp.element.createElement(\n                                \"thead\",\n                                null,\n                                wp.element.createElement(\n                                    \"tr\",\n                                    null,\n                                    wp.element.createElement(\n                                        \"th\",\n                                        { className: \"grey backend with-border\", colSpan: 5 },\n                                        \"Backend UI\"\n                                    ),\n                                    wp.element.createElement(\n                                        \"th\",\n                                        { className: \"grey frontend\", colSpan: 1 },\n                                        \"Frontend UI\"\n                                    )\n                                ),\n                                wp.element.createElement(\n                                    \"tr\",\n                                    null,\n                                    wp.element.createElement(\n                                        \"th\",\n                                        null,\n                                        \"Slug \\xA0\",\n                                        wp.element.createElement(\n                                            _Tippy2.default,\n                                            { title: \"Taxonomy slug. The post name/slug. Used for various queries for taxonomy content.\" },\n                                            wp.element.createElement(\n                                                \"span\",\n                                                { className: \"helper\" },\n                                                wp.element.createElement(_react3.Icon, { icon: \"bx:bx-help-circle\", width: \"18px\" })\n                                            )\n                                        )\n                                    ),\n                                    wp.element.createElement(\n                                        \"th\",\n                                        null,\n                                        \"Type\"\n                                    ),\n                                    wp.element.createElement(\n                                        \"th\",\n                                        null,\n                                        \"Meta boxes \\xA0\",\n                                        wp.element.createElement(\n                                            _Tippy2.default,\n                                            { title: \"Associated meta boxes\" },\n                                            wp.element.createElement(\n                                                \"span\",\n                                                { className: \"helper\" },\n                                                wp.element.createElement(_react3.Icon, { icon: \"bx:bx-help-circle\", width: \"18px\" })\n                                            )\n                                        )\n                                    ),\n                                    wp.element.createElement(\n                                        \"th\",\n                                        null,\n                                        \"Associated post types \\xA0\",\n                                        wp.element.createElement(\n                                            _Tippy2.default,\n                                            { title: \"Associate custom post types here\" },\n                                            wp.element.createElement(\n                                                \"span\",\n                                                { className: \"helper\" },\n                                                wp.element.createElement(_react3.Icon, { icon: \"bx:bx-help-circle\", width: \"18px\" })\n                                            )\n                                        )\n                                    ),\n                                    wp.element.createElement(\n                                        \"th\",\n                                        { className: \"with-border\" },\n                                        \"Post count \\xA0\",\n                                        wp.element.createElement(\n                                            _Tippy2.default,\n                                            { title: \"Published posts count associated with the taxonomy\" },\n                                            wp.element.createElement(\n                                                \"span\",\n                                                { className: \"helper\" },\n                                                wp.element.createElement(_react3.Icon, { icon: \"bx:bx-help-circle\", width: \"18px\" })\n                                            )\n                                        )\n                                    ),\n                                    wp.element.createElement(\n                                        \"th\",\n                                        { className: \"text-center\" },\n                                        \"Single template \\xA0\",\n                                        wp.element.createElement(\n                                            _Tippy2.default,\n                                            { title: \"The single template for taxonomy term\" },\n                                            wp.element.createElement(\n                                                \"span\",\n                                                { className: \"helper\" },\n                                                wp.element.createElement(_react3.Icon, { icon: \"bx:bx-help-circle\", width: \"18px\" })\n                                            )\n                                        )\n                                    )\n                                )\n                            ),\n                            wp.element.createElement(\n                                \"tbody\",\n                                null,\n                                fetched.map(function (element) {\n                                    return wp.element.createElement(_TaxonomyListElement2.default, { id: element.id, key: element.id, element: element });\n                                })\n                            )\n                        )\n                    )\n                ),\n                totalPages > 1 && wp.element.createElement(\n                    \"div\",\n                    { className: \"acpt-card__footer\", style: { border: \"none\" } },\n                    wp.element.createElement(\n                        \"div\",\n                        { className: \"acpt-card__inner\" },\n                        wp.element.createElement(_Pagination2.default, { currentPage: page ? page : 1, perPage: perPage, records: fetchedCount })\n                    )\n                )\n            ) : wp.element.createElement(\n                \"div\",\n                { className: \"acpt-alert acpt-alert-secondary\" },\n                \"No taxonomies found. \",\n                wp.element.createElement(\n                    _reactRouterDom.Link,\n                    { to: \"/register_taxonomy\" },\n                    \"Register the first one\"\n                ),\n                \"!\"\n            )\n        )\n    );\n};\n\nexports.default = TaxonomyList;\n\n// import React, {useEffect, useRef, useState} from 'react';\n// import {changeCurrentAdminMenuLink, metaTitle} from \"../../../utils/misc\";\n// import Breadcrumbs from \"../../reusable/Breadcrumbs\";\n// import {useDispatch, useSelector} from \"react-redux\";\n// import {Link, useParams} from \"react-router-dom\";\n// import Spinner from \"../../reusable/Loader/Spinner\";\n// import {fetchTaxonomiesCount} from \"../../../redux/thunks/fetchTaxonomiesCount\";\n// import {fetchTaxonomies} from \"../../../redux/thunks/fetchTaxonomies\";\n// import Pagination from \"../../reusable/Pagination\";\n// import TaxonomyListElement from \"./TaxonomyListElement\";\n// import {Icon} from \"@iconify/react\";\n// import Tippy from \"../../reusable/Tippy\";\n// import {translate} from \"../../../localization\";\n// import Copyright from \"../../reusable/Copyright\";\n// import {filterByLabel} from \"../../../utils/objects\";\n//\n// const TaxonomyList = () => {\n//\n//     // manage global state\n//     const dispatch = useDispatch();\n//     const {fetched, loading} = useSelector(state => state.fetchTaxonomiesReducer);\n//     const {fetched: fetchedCount, loading:loadingCount} = useSelector(state => state.fetchTaxonomiesCountReducer);\n//     const {loading: settingsLoading, fetched: settings} = useSelector(state => state.fetchSettingsReducer);\n//\n//     // manage local state\n//     const {page} = useParams();\n//     const didMountRef = useRef(false);\n//     const [fetchedSuccess, setFetchedSuccess] = useState(null);\n//     const perPage = (settings.length > 0 && filterByLabel(settings, 'key', 'records_per_page') !== '') ? filterByLabel(settings, 'key', 'records_per_page').value : 20;\n//\n//     useEffect(() => {\n//         metaTitle(translate(\"taxonomy_list.title\"));\n//         changeCurrentAdminMenuLink('#/taxonomies');\n//         dispatch(fetchTaxonomiesCount());\n//         dispatch(fetchTaxonomies({\n//             page: page ? page : 1,\n//             perPage: perPage\n//         }));\n//     }, [page]);\n//\n//     // handle fetch outcome\n//     useEffect(() => {\n//         if (didMountRef.current){\n//             if(!loading && !settingsLoading){\n//                 setFetchedSuccess(true);\n//             }\n//         } else {\n//             didMountRef.current = true;\n//         }\n//     }, [loading]);\n//\n//     if(!fetchedSuccess){\n//         return <Spinner/>;\n//     }\n//\n//     return (\n//         <div>\n//             <Breadcrumbs crumbs={[\n//                 {\n//                     label: \"Registered Custom Post Types\",\n//                     link: \"/\"\n//                 },\n//                 {\n//                     label: \"Registered Taxonomies\"\n//                 }\n//             ]} />\n//             <h1 className=\"acpt-title\">\n//                 <Icon icon=\"bx:bx-purchase-tag\" color=\"#02c39a\" width=\"18px\" />\n//                 &nbsp;\n//                 Registered Taxonomies\n//             </h1>\n//             <div className=\"acpt-buttons\">\n//                 <Link\n//                     className=\"acpt-btn acpt-btn-primary-o\"\n//                     to=\"/register_taxonomy\">\n//                     <Icon icon=\"bx:bx-list-plus\" width=\"18px\" />\n//                     &nbsp;\n//                     Register new Taxonomy\n//                 </Link>\n//             </div>\n//             {fetched.length > 0 ?\n//                 <div className=\"acpt-card\">\n//                     <div className=\"acpt-card__header\">\n//                         <div className=\"acpt-card__inner\">\n//                             {fetchedCount} record(s) found\n//                         </div>\n//                     </div>\n//                     <div className=\"acpt-card__body\">\n//                         <div className=\"acpt-table-responsive\">\n//                             <table className=\"acpt-table\">\n//                                 <thead>\n//                                     <tr>\n//                                         <th className=\"grey backend with-border\" colSpan={5}>Registered taxonomies</th>\n//                                         <th className=\"grey frontend\" colSpan={1}>Associated</th>\n//                                     </tr>\n//                                     <tr>\n//                                         <th>\n//                                             Slug\n//                                             &nbsp;\n//                                             <Tippy title=\"Taxonomy slug. The post name/slug. Used for various queries for taxonomy content.\">\n//                                                 <span className=\"helper\">\n//                                                     <Icon icon=\"bx:bx-help-circle\" width=\"18px\"/>\n//                                                 </span>\n//                                             </Tippy>\n//                                         </th>\n//                                         <th/>\n//                                         <th>\n//                                             Singular\n//                                             &nbsp;\n//                                             <Tippy title=\"Singular label. Used when a singular label is needed\">\n//                                                 <span className=\"helper\">\n//                                                     <Icon icon=\"bx:bx-help-circle\" width=\"18px\"/>\n//                                                 </span>\n//                                             </Tippy>\n//                                         </th>\n//                                         <th>\n//                                             Plural\n//                                             &nbsp;\n//                                             <Tippy title=\"Plural label. Used for the taxonomy admin menu item\">\n//                                                 <span className=\"helper\">\n//                                                     <Icon icon=\"bx:bx-help-circle\" width=\"18px\"/>\n//                                                 </span>\n//                                             </Tippy>\n//                                         </th>\n//                                         <th className=\"with-border\">\n//                                             Post count\n//                                             &nbsp;\n//                                             <Tippy title=\"Published posts count associated with the taxonomy\">\n//                                                 <span className=\"helper\">\n//                                                     <Icon icon=\"bx:bx-help-circle\" width=\"18px\"/>\n//                                                 </span>\n//                                             </Tippy>\n//                                         </th>\n//                                         <th>\n//                                             Custom post types\n//                                             &nbsp;\n//                                             <Tippy title=\"Associate custom post types here\">\n//                                                 <span className=\"helper\">\n//                                                     <Icon icon=\"bx:bx-help-circle\" width=\"18px\"/>\n//                                                 </span>\n//                                             </Tippy>\n//                                         </th>\n//                                     </tr>\n//                                 </thead>\n//                                 <tbody>\n//                                 {fetched.map((element) => <TaxonomyListElement id={element.id} key={element.id} element={element} />)}\n//                                 </tbody>\n//                             </table>\n//                         </div>\n//                     </div>\n//                     <div className=\"acpt-card__footer\" style={{border: \"none\"}}>\n//                         <div className=\"acpt-card__inner\">\n//                             <Pagination currentPage={page ? page : 1} perPage={perPage} records={fetchedCount}/>\n//                         </div>\n//                     </div>\n//                 </div>\n//                 :\n//                 <div className=\"acpt-alert acpt-alert-secondary\">\n//                     No taxonomies found. <Link to=\"/register_taxonomy\">Register the first one</Link>!\n//                 </div>\n//             }\n//             <Copyright/>\n//         </div>\n//     );\n// };\n//\n// export default TaxonomyList;\n\n//# sourceURL=webpack://advanced-custom-post-type-lite/./assets/src/App/components/pages/TaxonomyList/index.js?");

/***/ }),

/***/ 54:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n\nvar _react = __webpack_require__(7294);\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar CustomPostTypeLabel = function CustomPostTypeLabel(_ref) {\n    var element = _ref.element;\n\n\n    // Note: can be used also for Taxonomy\n\n    return wp.element.createElement(\n        _react2.default.Fragment,\n        null,\n        element.isNative ? wp.element.createElement(\n            'span',\n            { className: 'acpt-badge acpt-badge-native' },\n            wp.element.createElement(\n                'span',\n                { className: 'label' },\n                'Native'\n            )\n        ) : wp.element.createElement(\n            'span',\n            { className: 'acpt-badge acpt-badge-' + (element.isWooCommerce === true ? 'woocommerce' : 'custom') },\n            wp.element.createElement(\n                'span',\n                { className: 'label' },\n                element.isWooCommerce === true ? 'WooCommerce' : 'Custom'\n            )\n        )\n    );\n};\n\nexports.default = CustomPostTypeLabel;\n\n//# sourceURL=webpack://advanced-custom-post-type-lite/./assets/src/App/components/reusable/CustomPostType/CustomPostTypeLabel.js?");

/***/ }),

/***/ 6512:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n\nvar _react = __webpack_require__(7294);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactRouterDom = __webpack_require__(3727);\n\nvar _react3 = __webpack_require__(6229);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Breadcrumb = function Breadcrumb(_ref) {\n    var label = _ref.label,\n        link = _ref.link,\n        isLast = _ref.isLast;\n\n\n    return wp.element.createElement(\n        _react2.default.Fragment,\n        null,\n        wp.element.createElement(\n            \"li\",\n            { className: isLast ? 'current' : '' },\n            link ? wp.element.createElement(\n                _reactRouterDom.Link,\n                { to: link },\n                label\n            ) : label\n        ),\n        !isLast && wp.element.createElement(\n            \"span\",\n            { className: \"separator\" },\n            wp.element.createElement(_react3.Icon, { icon: \"bx:bx-chevron-right\", color: \"#aaa\", width: \"18px\" })\n        )\n    );\n};\n\nexports.default = Breadcrumb;\n\n//# sourceURL=webpack://advanced-custom-post-type-lite/./assets/src/App/components/reusable/Layout/Breadcrumbs/Breadcrumb.js?");

/***/ }),

/***/ 5827:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n\nvar _react = __webpack_require__(7294);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Breadcrumb = __webpack_require__(6512);\n\nvar _Breadcrumb2 = _interopRequireDefault(_Breadcrumb);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Breadcrumbs = function Breadcrumbs(_ref) {\n    var crumbs = _ref.crumbs;\n\n    return wp.element.createElement(\n        \"div\",\n        { className: \"acpt-breadcrumbs\" },\n        crumbs.length > 0 && wp.element.createElement(\n            \"ul\",\n            null,\n            crumbs.map(function (crumb, index) {\n                return wp.element.createElement(_Breadcrumb2.default, {\n                    label: crumb.label,\n                    link: crumb.link,\n                    isLast: index + 1 === crumbs.length,\n                    key: index\n                });\n            })\n        )\n    );\n};\n\nexports.default = Breadcrumbs;\n\n//# sourceURL=webpack://advanced-custom-post-type-lite/./assets/src/App/components/reusable/Layout/Breadcrumbs/index.js?");

/***/ }),

/***/ 1222:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n\nvar _react = __webpack_require__(7294);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactRouterDom = __webpack_require__(3727);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Pagination = function Pagination(_ref) {\n    var currentPage = _ref.currentPage,\n        perPage = _ref.perPage,\n        records = _ref.records;\n\n\n    var totalPages = Math.ceil(records / perPage);\n    var rows = [];\n    for (var i = 1; i <= totalPages; i++) {\n        rows.push(i);\n    }\n\n    if (rows.length < 2) {\n        return wp.element.createElement(_react2.default.Fragment, null);\n    }\n\n    return wp.element.createElement(\n        \"ul\",\n        { className: \"acpt-pagination\" },\n        rows.map(function (row) {\n            return wp.element.createElement(\n                \"li\",\n                null,\n                row == currentPage ? wp.element.createElement(\n                    \"span\",\n                    null,\n                    row\n                ) : wp.element.createElement(\n                    _reactRouterDom.Link,\n                    { to: \"/\" + row },\n                    row\n                )\n            );\n        })\n    );\n};\n\nexports.default = Pagination;\n\n//# sourceURL=webpack://advanced-custom-post-type-lite/./assets/src/App/components/reusable/Pagination/index.js?");

/***/ }),

/***/ 895:
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar metaTypes = exports.metaTypes = {\n    CUSTOM_POST_TYPE: \"customPostType\",\n    TAXONOMY: \"taxonomy\",\n    USER: \"user\"\n};\n\n//# sourceURL=webpack://advanced-custom-post-type-lite/./assets/src/App/constants/metaTypes.js?");

/***/ }),

/***/ 8525:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n\n/**\n * Translate a string from locale files\n *\n * @param string\n * @return {*}\n */\nvar translate = exports.translate = function translate(string, args) {\n    var lang = __webpack_require__.g.settings && __webpack_require__.g.settings.language ? __webpack_require__.g.settings.language : 'en';\n    var json = __webpack_require__(8053)(\"./\" + lang + \".js\").translations;\n    var strings = string.split(\".\");\n    var translation = getTranslatedString(json, strings);\n\n    if (args !== null && typeof args !== 'undefined') {\n        for (var key in args) {\n            translation = translation.replace(\"{{\" + key + \"}}\", args[key]);\n        }\n    }\n\n    return typeof translation !== 'undefined' ? translation : string;\n};\n\nvar getTranslatedString = function getTranslatedString(json, strings) {\n\n    var object = json;\n\n    strings.map(function (s) {\n        object = object[s];\n    });\n\n    return object;\n};\n\n//# sourceURL=webpack://advanced-custom-post-type-lite/./assets/src/App/localization/index.js?");

/***/ }),

/***/ 3167:
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar translations = exports.translations = {\n    \"404\": {\n        \"title\": \"Page not found\"\n    },\n    \"create\": {\n        \"title\": \"Register a new Custom Post Type\"\n    },\n    \"edit\": {\n        \"title\": \"Edit a new Custom Post Type\"\n    },\n    \"list\": {\n        \"title\": \"Registered Custom Post Types\"\n    },\n    \"view\": {\n        \"title\": \"Custom Post Type global settings\"\n    },\n    \"taxonomy_list\": {\n        \"title\": \"Registered Taxonomies\"\n    },\n    \"taxonomy_create\": {\n        \"title\": \"Register a new Taxonomy\"\n    },\n    \"taxonomy_edit\": {\n        \"title\": \"Edit a Taxonomy\"\n    },\n    \"taxonomy_view\": {\n        \"title\": \"Taxonomy settings\"\n    },\n    \"general\": {\n        \"labels\": {\n            \"all_items\": \"All {{r}}\",\n            \"add\": \"Add\",\n            \"add_new_item\": \"Add new {{r}}\",\n            \"back_to_items\": \"Back to {{r}}\",\n            \"edit\": \"Edit\",\n            \"new\": \"New\",\n            \"not_found\": \"No {{r}} found\",\n            \"search\": \"Search\",\n            \"view\": \"View\",\n            \"parent_item_colon\": \"Parent item\",\n            \"featured_image\": \"Featured image\",\n            \"set_featured_image\": \"Set featured image\",\n            \"remove_featured_image\": \"Remove featured image\",\n            \"use_featured_image\": \"Use featured image\",\n            \"most_used\": \"Most used {{r}}\",\n            \"archives\": \"Archives\",\n            \"insert_into_item\": \"Insert\",\n            \"uploaded_to_this_item\": \"Upload\",\n            \"filter_items_list\": \"Filter {{r}} list\",\n            \"items_list_navigation\": \"Navigation list {{r}}\",\n            \"items_list\": \"List {{r}}\",\n            \"filter_by_date\": \"Filter by date\",\n            \"item_published\": \"{{r}} published\",\n            \"item_published_privately\": \"{{r}} published privately\",\n            \"item_reverted_to_draft\": \"{{r}} reverted to draft\",\n            \"item_scheduled\": \"{{r}} scheduled\",\n            \"item_updated\": \"{{r}} updated\",\n            \"popular_items\": \"Popular {{r}}\",\n            \"update_item\": \"Update {{r}}\",\n            \"no_terms\": \"No {{r}}\",\n            \"parent_item\": \"Parent {{r}}\",\n            \"new_item_name\": \"New {{r}}\",\n            \"filter_by_item\": \"Filter by {{r}}\",\n            \"separate_items_with_commas\": \"Separate {{r}} with commas\",\n            \"add_or_remove_items\": \"Add or remove {{r}}\",\n            \"choose_from_most_used\": \"Choose from most used {{r}}\",\n            \"search_items\": \"Search {{r}}\"\n        }\n    }\n};\n\n//# sourceURL=webpack://advanced-custom-post-type-lite/./assets/src/App/localization/locales/en.js?");

/***/ }),

/***/ 1141:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.fetchTaxonomies = undefined;\n\nvar _ajax = __webpack_require__(7569);\n\nvar _fetchTaxonomiesActions = __webpack_require__(7783);\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar fetchTaxonomies = exports.fetchTaxonomies = function fetchTaxonomies(meta) {\n    return function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(dispatch, getState) {\n            var fetched;\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                    switch (_context.prev = _context.next) {\n                        case 0:\n                            _context.prev = 0;\n\n                            dispatch((0, _fetchTaxonomiesActions.fetchTaxonomiesInProgress)(meta));\n                            _context.next = 4;\n                            return (0, _ajax.wpAjaxRequest)('fetchTaxonomiesAction', meta ? meta : {});\n\n                        case 4:\n                            fetched = _context.sent;\n\n                            dispatch((0, _fetchTaxonomiesActions.fetchTaxonomiesSuccess)(fetched));\n                            _context.next = 11;\n                            break;\n\n                        case 8:\n                            _context.prev = 8;\n                            _context.t0 = _context[\"catch\"](0);\n\n                            dispatch((0, _fetchTaxonomiesActions.fetchTaxonomiesFailure)(_context.t0));\n\n                        case 11:\n                        case \"end\":\n                            return _context.stop();\n                    }\n                }\n            }, _callee, undefined, [[0, 8]]);\n        }));\n\n        return function (_x, _x2) {\n            return _ref.apply(this, arguments);\n        };\n    }();\n};\n\n//# sourceURL=webpack://advanced-custom-post-type-lite/./assets/src/App/redux/thunks/fetchTaxonomies.js?");

/***/ }),

/***/ 2081:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.fetchTaxonomiesCount = undefined;\n\nvar _ajax = __webpack_require__(7569);\n\nvar _fetchTaxonomiesCountActions = __webpack_require__(5034);\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar fetchTaxonomiesCount = exports.fetchTaxonomiesCount = function fetchTaxonomiesCount() {\n    return function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(dispatch, getState) {\n            var fetched;\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                    switch (_context.prev = _context.next) {\n                        case 0:\n                            _context.prev = 0;\n\n                            dispatch((0, _fetchTaxonomiesCountActions.fetchTaxonomiesCountInProgress)());\n                            _context.next = 4;\n                            return (0, _ajax.wpAjaxRequest)('fetchTaxonomiesCountAction');\n\n                        case 4:\n                            fetched = _context.sent;\n\n                            dispatch((0, _fetchTaxonomiesCountActions.fetchTaxonomiesCountSuccess)(fetched));\n                            _context.next = 11;\n                            break;\n\n                        case 8:\n                            _context.prev = 8;\n                            _context.t0 = _context[\"catch\"](0);\n\n                            dispatch((0, _fetchTaxonomiesCountActions.fetchTaxonomiesCountFailure)(_context.t0));\n\n                        case 11:\n                        case \"end\":\n                            return _context.stop();\n                    }\n                }\n            }, _callee, undefined, [[0, 8]]);\n        }));\n\n        return function (_x, _x2) {\n            return _ref.apply(this, arguments);\n        };\n    }();\n};\n\n//# sourceURL=webpack://advanced-custom-post-type-lite/./assets/src/App/redux/thunks/fetchTaxonomiesCount.js?");

/***/ }),

/***/ 3154:
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n/**\n * Change document's <title>\n * @param title\n */\nvar metaTitle = exports.metaTitle = function metaTitle(title) {\n    var originalDocumentTitle = document.title.split(\"‹\");\n    document.title = title + ' \\u2039 ' + originalDocumentTitle[1];\n};\n\n/**\n * Add current class to admin menu link\n * @param link\n */\nvar changeCurrentAdminMenuLink = exports.changeCurrentAdminMenuLink = function changeCurrentAdminMenuLink(link) {\n\n    var menuWrapper = document.querySelector('#toplevel_page_advanced-custom-post-type-lite .wp-submenu');\n\n    menuWrapper.childNodes.forEach(function (currentValue, currentIndex, listObj) {\n        var links = currentValue.getElementsByTagName('a');\n\n        for (var i = 0; i < links.length; i++) {\n            var elem = links[i];\n            var href = elem.getAttribute(\"href\");\n            var toCompare = 'admin.php?page=advanced-custom-post-type-lite' + link;\n\n            if (toCompare === href) {\n                currentValue.classList.add(\"current\");\n            } else {\n                currentValue.classList.remove(\"current\");\n            }\n        }\n    });\n};\n\nvar refreshPage = exports.refreshPage = function refreshPage() {\n    var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    setTimeout(function () {\n        window.location.reload();\n    }, timeout);\n};\n\n//# sourceURL=webpack://advanced-custom-post-type-lite/./assets/src/App/utils/misc.js?");

/***/ })

}]);