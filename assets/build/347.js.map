{"version":3,"sources":["webpack://advanced-custom-post-type-lite/./assets/src/App/components/pages/ViewCustomPostType/_Basic.js","webpack://advanced-custom-post-type-lite/./assets/src/App/components/pages/ViewCustomPostType/_Labels.js","webpack://advanced-custom-post-type-lite/./assets/src/App/components/pages/ViewCustomPostType/_Settings.js","webpack://advanced-custom-post-type-lite/./assets/src/App/components/pages/ViewCustomPostType/index.js","webpack://advanced-custom-post-type-lite/./assets/src/App/components/reusable/Boolean/index.js","webpack://advanced-custom-post-type-lite/./assets/src/App/constants/label.js","webpack://advanced-custom-post-type-lite/./assets/src/App/redux/thunks/fetchPostTypes.js","webpack://advanced-custom-post-type-lite/./assets/src/App/utils/misc.js"],"names":["BasicElement","state","fetchPostTypesReducer","fetched","data","name","singular","plural","icon","supports","postType","width","map","s","LabelsElement","labels","postLabelsList","item","label","id","SettingsElement","settings","public","publicly_queryable","show_ui","show_in_menu","show_in_nav_menus","show_in_admin_bar","show_in_rest","rest_base","menu_position","capability_type","has_archive","rewrite","custom_rewrite","query_var","custom_query_var","ViewCustomPostType","loading","dispatch","didMountRef","fetchedSuccess","setFetchedSuccess","activeTab","setActiveTab","handleAccordionClick","index","history","push","current","length","buttons","link","Boolean","status","color","description","fetchPostTypes","meta","getState","metaTitle","title","originalDocumentTitle","document","split","changeCurrentAdminMenuLink","menuWrapper","querySelector","childNodes","forEach","currentValue","currentIndex","listObj","links","getElementsByTagName","i","elem","href","getAttribute","toCompare","classList","add","remove","refreshPage","timeout","setTimeout","window","location","reload"],"mappings":"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","file":"347.js","sourcesContent":["import React from 'react';\nimport {Link, useParams} from \"react-router-dom\";\nimport {useSelector} from \"react-redux\";\nimport {Icon} from \"@iconify/react\";\n\nconst BasicElement = () => {\n\n    // manage global state\n    const {fetched} = useSelector(state => state.fetchPostTypesReducer);\n    const data = {\n        name: fetched[0].name,\n        singular: fetched[0].singular,\n        plural: fetched[0].plural,\n        icon: fetched[0].icon,\n        supports: fetched[0].supports\n    };\n\n    // manage local state\n    const {postType} = useParams();\n\n    return (\n        <div>\n            <table className=\"acpt-table acpt-table-secondary mb-3\">\n                <tr>\n                    <th style={{width: '180px'}}>Name</th>\n                    <td>{data.name}</td>\n                </tr>\n                <tr>\n                    <th style={{width: '180px'}}>Singular</th>\n                    <td>{data.singular}</td>\n                </tr>\n                <tr>\n                    <th style={{width: '180px'}}>Plural</th>\n                    <td>{data.plural}</td>\n                </tr>\n                <tr>\n                    <th style={{width: '180px'}}>Icon</th>\n                    <td>\n                        <Icon icon={`dashicons:${data.icon}`} color=\"#2271b1\" width=\"18px\" />\n                    </td>\n                </tr>\n                <tr>\n                    <th style={{width: '180px'}}>Supports</th>\n                    <td>\n                        {data.supports && data.supports.map((s)=>\n                            (s !== '') && (\n                                <div className=\"acpt-badge mr-1\">\n                                    <span className=\"label\">{s}</span>\n                                </div>\n                            )\n                        )}\n                    </td>\n                </tr>\n            </table>\n        </div>\n    );\n};\n\nexport default BasicElement;","import React from 'react';\nimport {Link, useParams} from \"react-router-dom\";\nimport {postLabelsList} from \"../../../constants/label\";\nimport {useSelector} from \"react-redux\";\nimport {Icon} from \"@iconify/react\";\n\nconst LabelsElement = () => {\n\n    // manage global state\n    const {fetched} = useSelector(state => state.fetchPostTypesReducer);\n    const data = fetched[0].labels;\n\n    // manage local state\n    const {postType} = useParams();\n\n    return (\n        <div>\n            <table className=\"acpt-table acpt-table-secondary mb-3\">\n                {postLabelsList.map((item) => (\n                    <tr>\n                        <th style={{width: '180px'}}>{item.label}</th>\n                        <td>{data[item.id]}</td>\n                    </tr>\n                ))}\n            </table>\n        </div>\n    );\n};\n\nexport default LabelsElement;","import React from 'react';\nimport {useSelector} from \"react-redux\";\nimport {Link, useParams} from \"react-router-dom\";\nimport Boolean from \"../../reusable/Boolean\";\nimport {Icon} from \"@iconify/react\";\n\nconst SettingsElement = () => {\n\n    // manage global state\n    const {fetched} = useSelector(state => state.fetchPostTypesReducer);\n    const data = fetched[0].settings;\n\n    // manage local state\n    const {postType} = useParams();\n\n    return (\n        <div>\n            <table className=\"acpt-table acpt-table-secondary mb-3\">\n                <tr>\n                    <th style={{width: '180px'}}>Is Public</th>\n                    <td><Boolean status={data.public}/></td>\n                </tr>\n                <tr>\n                    <th style={{width: '180px'}}>Publicly queryable</th>\n                    <td><Boolean status={data.publicly_queryable}/></td>\n                </tr>\n                <tr>\n                    <th style={{width: '180px'}}>Show in UI</th>\n                    <td><Boolean status={data.show_ui}/></td>\n                </tr>\n                <tr>\n                    <th style={{width: '180px'}}>Show in menu</th>\n                    <td><Boolean status={data.show_in_menu}/></td>\n                </tr>\n                <tr>\n                    <th style={{width: '180px'}}>Show in nav menus</th>\n                    <td><Boolean status={data.show_in_nav_menus}/></td>\n                </tr>\n                <tr>\n                    <th style={{width: '180px'}}>Show in admin bar</th>\n                    <td><Boolean status={data.show_in_admin_bar}/></td>\n                </tr>\n                <tr>\n                    <th style={{width: '180px'}}>Show in REST API</th>\n                    <td><Boolean status={data.show_in_rest}/></td>\n                </tr>\n                <tr>\n                    <th style={{width: '180px'}}>REST API base slug</th>\n                    <td>{data.rest_base}</td>\n                </tr>\n                <tr>\n                    <th style={{width: '180px'}}>Menu position</th>\n                    <td>{data.menu_position}</td>\n                </tr>\n                <tr>\n                    <th style={{width: '180px'}}>Capability Type</th>\n                    <td>{data.capability_type}</td>\n                </tr>\n                <tr>\n                    <th style={{width: '180px'}}>Has archive</th>\n                    <td><Boolean status={data.has_archive}/></td>\n                </tr>\n                <tr>\n                    <th style={{width: '180px'}}>Rewrite</th>\n                    <td><Boolean status={data.rewrite}/></td>\n                </tr>\n                <tr>\n                    <th style={{width: '180px'}}>Custom rewrite rules</th>\n                    <td>{data.custom_rewrite}</td>\n                </tr>\n                <tr>\n                    <th style={{width: '180px'}}>Query var</th>\n                    <td><Boolean status={data.query_var}/></td>\n                </tr>\n                <tr>\n                    <th style={{width: '180px'}}>Custom query var</th>\n                    <td>{data.custom_query_var}</td>\n                </tr>\n            </table>\n        </div>\n    );\n};\n\nexport default SettingsElement;","import React, {useEffect, useRef, useState} from 'react';\nimport Breadcrumbs from \"../../reusable/Breadcrumbs\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Link, useHistory, useParams} from \"react-router-dom\";\nimport {fetchPostTypes} from \"../../../redux/thunks/fetchPostTypes\";\nimport Spinner from \"../../reusable/Loader/Spinner\";\nimport {metaTitle} from \"../../../utils/misc\";\nimport Accordion from \"../../reusable/Accordion\";\nimport LabelsElement from \"./_Labels\";\nimport BasicElement from \"./_Basic\";\nimport SettingsElement from \"./_Settings\";\nimport NotFound404 from \"../404\";\nimport Layout from \"../../../components/reusable/Layout\";\nimport ActionsBar from \"../../../components/reusable/Layout/ActionsBar\";\n\nconst ViewCustomPostType = () => {\n\n    // manage global state\n    const {fetched, loading} = useSelector(state => state.fetchPostTypesReducer);\n    const dispatch = useDispatch();\n\n    // manage local state\n    const {postType} = useParams();\n    const didMountRef = useRef(false);\n    const [fetchedSuccess, setFetchedSuccess] = useState(null);\n    const [activeTab, setActiveTab] = useState(1);\n\n    const handleAccordionClick = (index) => {\n        setActiveTab(index+1);\n    };\n\n    // manage redirect\n    const history = useHistory();\n\n    if(postType === 'page' || postType === 'post'){\n        history.push('/');\n    }\n\n    useEffect(() => {\n        dispatch(fetchPostTypes({\n            postType:postType\n        }));\n        metaTitle(\"Custom Post Type global settings\");\n    }, [postType]);\n\n    // handle fetch outcome\n    useEffect(() => {\n        if (didMountRef.current){\n            if(!loading){\n                if(fetched.length !== 0){\n                    setFetchedSuccess(true);\n                } else {\n                    setFetchedSuccess(false);\n                }\n            }\n        } else {\n            didMountRef.current = true;\n        }\n    }, [loading]);\n\n    if(fetchedSuccess === null){\n        return <Spinner/>;\n    }\n\n    if(!fetchedSuccess){\n        return <NotFound404/>;\n    }\n\n    const buttons =\n        <React.Fragment>\n            <Link\n                className=\"acpt-btn acpt-btn-primary\"\n                to={`/edit/${postType}/${activeTab}`}\n            >\n                Edit\n            </Link>\n            <Link\n                className=\"acpt-btn acpt-btn-primary-o\"\n                to={`/assoc-taxonomy-post/${postType}`}\n            >\n                Taxonomies association\n            </Link>\n        </React.Fragment>;\n\n    return (\n        <Layout>\n            <ActionsBar\n                title={`${postType} global settings`}\n                actions={buttons}\n            />\n            <main>\n                <Breadcrumbs crumbs={[\n                    {\n                        label: \"Registered Custom Post Types\",\n                        link: \"/\"\n                    },\n                    {\n                        label: \"Custom Post Type global settings\"\n                    }\n                ]} />\n                <Accordion handleClick={handleAccordionClick}>\n                    <BasicElement title=\"Basic\" />\n                    <LabelsElement title=\"Labels\" />\n                    <SettingsElement title=\"Settings\"/>\n                </Accordion>\n            </main>\n        </Layout>\n    );\n};\n\nexport default ViewCustomPostType;","import React from 'react';\nimport {Icon} from \"@iconify/react\";\n\nconst Boolean = ({status}) => {\n\n    const icon = status ? 'bx:bx-check' : 'bx:bx-x';\n    const color = status ? '#02c39a' : '#f94144';\n\n    return <Icon icon={icon} color={color} width=\"18px\" />\n};\n\nexport default Boolean;","\n// please refer to\n// https://developer.wordpress.org/reference/functions/get_post_type_labels/\nexport const postLabelsList = [\n    {\n        id: \"menu_name\",\n        label: \"Menu Name\",\n        description: \"Label for the menu name. Default is the same as name.\",\n    },\n    {\n        id: \"all_items\",\n        label: \"All items\",\n        description: \"Label to signify all items in a submenu link. Default is ‘All Posts’ / ‘All Pages’.\",\n    },\n    {\n        id: \"add_new\",\n        label: \"Add New\",\n        description: \"Default is ‘Add New’ for both hierarchical and non-hierarchical types.\",\n    },\n    {\n        id: \"add_new_item\",\n        label: \"Add New Item\",\n        description: \"Label for adding a new singular item. Default is ‘Add New Post’ / ‘Add New Page’.\",\n    },\n    {\n        id: \"edit_item\",\n        label: \"Edit Item\",\n        description: \"Label for editing a singular item. Default is ‘Edit Post’ / ‘Edit Page’.\",\n    },\n    {\n        id: \"new_item\",\n        label: \"New Item\",\n        description: \"Label for the new item page title. Default is ‘New Post’ / ‘New Page’.\",\n    },\n    {\n        id: \"view_item\",\n        label: \"View Item\",\n        description: \"Label for viewing a singular item. Default is ‘View Post’ / ‘View Page’.\",\n    },\n    {\n        id: \"view_items\",\n        label: \"View Items\",\n        description: \"Label for viewing post type archives. Default is ‘View Posts’ / ‘View Pages’.\",\n    },\n    {\n        id: \"search_item\",\n        label: \"Search Item\",\n        description: \"Label for searching plural items. Default is ‘Search Posts’ / ‘Search Pages’.\",\n    },\n    {\n        id: \"not_found\",\n        label: \"Not Found\",\n        description: \"Label used when no items are found. Default is ‘No posts found’ / ‘No pages found’.\",\n    },\n    {\n        id: \"not_found_in_trash\",\n        label: \"Not Found in Trash\",\n        description: \"Label used when no items are in the Trash. Default is ‘No posts found in Trash’ / ‘No pages found in Trash’.\",\n    },\n    {\n        id: \"parent_item_colon\",\n        label: \"Parent\",\n        description: \"Label used to prefix parents of hierarchical items. Not used on non-hierarchical post types. Default is ‘Parent Page:’.\",\n    },\n    {\n        id: \"featured_image\",\n        label: \"Featured Image\",\n        description: \"Label for the featured image meta box title. Default is ‘Featured image’.\",\n    },\n    {\n        id: \"set_featured_image\",\n        label: \"Set Featured Image\",\n        description: \"Label for setting the featured image. Default is ‘Set featured image’.\",\n    },\n    {\n        id: \"remove_featured_image\",\n        label: \"Remove Featured Image\",\n        description: \"Label for removing the featured image. Default is ‘Remove featured image’.\",\n    },\n    {\n        id: \"use_featured_image\",\n        label: \"Use Featured Image\",\n        description: \"Label in the media frame for using a featured image. Default is ‘Use as featured image’.\",\n    },\n    {\n        id: \"archives\",\n        label: \"Archives\",\n        description: \"Label for archives in nav menus. Default is ‘Post Archives’ / ‘Page Archives’.\",\n    },\n    {\n        id: \"insert_into_item\",\n        label: \"Insert into item\",\n        description: \"Label for the media frame button. Default is ‘Insert into post’ / ‘Insert into page’.\",\n    },\n    {\n        id: \"uploaded_to_this_item\",\n        label: \"Uploaded to this Item\",\n        description: \"Label for the media frame filter. Default is ‘Uploaded to this post’ / ‘Uploaded to this page’.\",\n    },\n    {\n        id: \"filter_items_list\",\n        label: \"Filter Items List\",\n        description: \"Label for the table views hidden heading. Default is ‘Filter posts list’ / ‘Filter pages list’.\",\n    },\n    {\n        id: \"items_list_navigation\",\n        label: \"Items List Navigation\",\n        description: \"Label for the table pagination hidden heading. Default is ‘Posts list navigation’ / ‘Pages list navigation’.\",\n    },\n    {\n        id: \"items_list\",\n        label: \"Items List\",\n        description: \"Label for the table hidden heading. Default is ‘Posts list’ / ‘Pages list’.\",\n    },\n    {\n        id: \"filter_by_date\",\n        label: \"Filter by date\",\n        description: \"Label for the date filter in list tables. Default is ‘Filter by date’.\",\n    },\n    {\n        id: \"item_published\",\n        label: \"Item published\",\n        description: \"Label used when an item is published. Default is ‘Post published.’ / ‘Page published.’\",\n    },\n    {\n        id: \"item_published_privately\",\n        label: \"Item published privately\",\n        description: \"Label used when an item is published with private visibility. Default is ‘Post published privately.’ / ‘Page published privately.’\",\n    },\n    {\n        id: \"item_reverted_to_draft\",\n        label: \"Item reverted to draft\",\n        description: \"Label used when an item is switched to a draft. Default is ‘Post reverted to draft.’ / ‘Page reverted to draft.’\",\n    },\n    {\n        id: \"item_scheduled\",\n        label: \"Item scheduled\",\n        description: \"Label used when an item is scheduled for publishing. Default is ‘Post scheduled.’ / ‘Page scheduled.’\",\n    },\n    {\n        id: \"item_updated\",\n        label: \"Item updated\",\n        description: \"Label used when an item is updated. Default is ‘Post updated.’ / ‘Page updated.’\",\n    },\n];","import {wpAjaxRequest} from \"../../utils/ajax\";\nimport {fetchPostTypesFailure, fetchPostTypesInProgress, fetchPostTypesSuccess} from \"../actions/fetchCustomPostTypesActions\";\n\nexport const fetchPostTypes = (meta) => async (dispatch, getState) => {\n    try {\n        dispatch(fetchPostTypesInProgress(meta));\n        const fetched = await wpAjaxRequest('fetchCustomPostTypesAction', meta ? meta : {} );\n        dispatch(fetchPostTypesSuccess(fetched));\n    } catch ( e ) {\n        dispatch(fetchPostTypesFailure(e));\n    }\n};\n","/**\n * Change document's <title>\n * @param title\n */\nexport const metaTitle = (title) => {\n    const originalDocumentTitle = document.title.split(\"‹\");\n    document.title = `${title} ‹ ${originalDocumentTitle[1]}`;\n};\n\n/**\n * Add current class to admin menu link\n * @param link\n */\nexport const changeCurrentAdminMenuLink = (link) => {\n\n    const menuWrapper = document.querySelector('#toplevel_page_advanced-custom-post-type-lite .wp-submenu');\n\n    menuWrapper.childNodes.forEach((currentValue, currentIndex, listObj) => {\n        const links = currentValue.getElementsByTagName('a');\n\n        for(let i = 0; i < links.length; i++) {\n            let elem = links[i];\n            let href = elem.getAttribute(\"href\");\n            let toCompare = 'admin.php?page=advanced-custom-post-type-lite'+link;\n\n            if( toCompare === href ){\n                currentValue.classList.add(\"current\");\n            } else {\n                currentValue.classList.remove(\"current\");\n            }\n        }\n    });\n};\n\nexport const refreshPage = (timeout = 0) => {\n    setTimeout(function () {\n        window.location.reload();\n    }, timeout);\n};"],"sourceRoot":""}