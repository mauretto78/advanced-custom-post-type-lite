{"version":3,"sources":["webpack://advanced-custom-post-type-lite/./assets/src/App/components/pages/Settings/index.js","webpack://advanced-custom-post-type-lite/./assets/src/App/components/reusable/Form/InputNumber.js","webpack://advanced-custom-post-type-lite/./assets/src/App/components/reusable/Form/ReactSelect.js","webpack://advanced-custom-post-type-lite/./assets/src/App/constants/languages.js","webpack://advanced-custom-post-type-lite/./assets/src/App/constants/lists.js","webpack://advanced-custom-post-type-lite/./assets/src/App/redux/thunks/saveSettings.js","webpack://advanced-custom-post-type-lite/./assets/src/App/utils/misc.js"],"names":["Settings","state","saveSettingsReducer","saveErrors","errors","saveSuccess","success","saveLoading","loading","fetchSettingsReducer","fetched","dispatch","isFormSubmitted","setFormSubmitted","onSubmit","data","records_per_page","delete_tables_when_deactivate","value","delete_posts","delete_metadata","language","toast","length","map","error","deletePostsDefaultValue","yesOrNoList","label","deleteMetadataDefaultValue","deleteDefinitionsDefaultValue","perPageDefaultValue","languageDefaultValue","lanuagesList","mode","defaultValues","control","register","handleSubmit","formState","isValid","submitButton","link","required","InputNumber","id","placeholder","validate","min","max","step","isRequired","description","wizard","__html","message","ReactSelect","values","defaultValue","field","onChange","onBlur","name","ref","fieldState","invalid","isTouched","isDirty","reactSelectStyles","saveSettings","getState","res","metaTitle","title","originalDocumentTitle","document","split","changeCurrentAdminMenuLink","menuWrapper","querySelector","childNodes","forEach","currentValue","currentIndex","listObj","links","getElementsByTagName","i","elem","href","getAttribute","toCompare","classList","add","remove","refreshPage","timeout","setTimeout","window","location","reload"],"mappings":"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","file":"938.js","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport {changeCurrentAdminMenuLink, metaTitle} from \"../../../utils/misc\";\nimport Breadcrumbs from \"../../reusable/Breadcrumbs\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Spinner from \"../../reusable/Loader/Spinner\";\nimport {saveSettings} from \"../../../redux/thunks/saveSettings\";\nimport {useForm} from \"react-hook-form\";\nimport {yesOrNoList} from \"../../../constants/lists\";\nimport {lanuagesList} from \"../../../constants/languages\";\nimport Layout from \"../../../components/reusable/Layout\";\nimport ActionsBar from \"../../../components/reusable/Layout/ActionsBar\";\nimport ReactSelect from \"../../../components/reusable/Form/ReactSelect\";\nimport InputNumber from \"../../../components/reusable/Form/InputNumber\";\nimport {\n    filterByLabel,\n    filterByValue\n} from \"../../../utils/objects\";\nimport {toast} from \"react-toastify\";\n\nconst Settings = () => {\n\n    // manage global state\n    const {errors: saveErrors, success: saveSuccess, loading: saveLoading} = useSelector(state => state.saveSettingsReducer);\n    const {loading, fetched} = useSelector(state => state.fetchSettingsReducer);\n    const dispatch = useDispatch();\n\n    const [isFormSubmitted, setFormSubmitted] = useState(false);\n\n    // form & handle form functions\n\n    const onSubmit = (data) => {\n        dispatch(saveSettings({\n            records_per_page: data.records_per_page,\n            delete_tables_when_deactivate: data.delete_tables_when_deactivate.value,\n            delete_posts: data.delete_posts.value,\n            delete_metadata: data.delete_metadata.value,\n            language: data.language.value\n        }));\n        setFormSubmitted(true);\n    };\n\n    useEffect(()=>{\n        if(isFormSubmitted && saveSuccess){\n            toast.success(\"Settings saved.\");\n        }\n\n        if(isFormSubmitted && saveErrors.length > 0){\n            saveErrors.map((error)=>\n                toast.error(error)\n            );\n        }\n\n        if(isFormSubmitted){\n            setFormSubmitted(false);\n        }\n    }, [saveLoading]);\n\n    const deletePostsDefaultValue = (fetched.length > 0 && typeof filterByLabel(fetched, 'key', 'delete_posts') !== 'undefined') ? filterByValue(yesOrNoList, filterByLabel(fetched, 'key', 'delete_posts').value) : {label: \"Select\", value: null};\n    const deleteMetadataDefaultValue = (fetched.length > 0 && typeof filterByLabel(fetched, 'key', 'delete_metadata') !== 'undefined') ? filterByValue(yesOrNoList, filterByLabel(fetched, 'key', 'delete_metadata').value) : {label: \"Select\", value: null};\n    const deleteDefinitionsDefaultValue = (fetched.length > 0 && typeof filterByLabel(fetched, 'key', 'delete_tables_when_deactivate') !== 'undefined') ? filterByValue(yesOrNoList, filterByLabel(fetched, 'key', 'delete_tables_when_deactivate').value) : {label: \"Select\", value: null};\n    const perPageDefaultValue = (fetched.length > 0 && filterByLabel(fetched, 'key', 'records_per_page') !== '') ? filterByLabel(fetched, 'key', 'records_per_page').value : 20;\n    const languageDefaultValue = (fetched.length > 0 && typeof filterByLabel(fetched, 'key', 'language').value !== 'undefined') ? filterByValue(lanuagesList, filterByLabel(fetched, 'key', 'language').value) : { value: 'en', label: \"English\" };\n\n    const { control, register, handleSubmit, formState: {errors, isValid} } = useForm({\n        mode: 'all',\n        defaultValues: {\n            delete_metadata: deleteMetadataDefaultValue,\n            delete_posts: deletePostsDefaultValue,\n            delete_tables_when_deactivate: deleteDefinitionsDefaultValue,\n            records_per_page: perPageDefaultValue,\n            language: languageDefaultValue,\n        }\n    });\n\n    useEffect(() => {\n        metaTitle(`Settings page`);\n        changeCurrentAdminMenuLink('#/settings');\n    }, []);\n\n    if(loading){\n        return <Spinner/>;\n    }\n\n    const submitButton = <button\n        className=\"acpt-btn acpt-btn-primary\"\n        disabled={(!isValid || loading) ? 'disabled' : ''}\n    >\n        {loading ? 'Loading...' : 'Save'}\n    </button>;\n\n    return (\n        <Layout>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <ActionsBar\n                    title=\"Settings\"\n                    actions={submitButton}\n                />\n                <main>\n                    <Breadcrumbs crumbs={[\n                        {\n                            label: \"Advanced custom post types\",\n                            link: \"/\"\n                        },\n                        {\n                            label: \"Settings\"\n                        }\n                    ]} />\n                    <div className=\"acpt-card\">\n                        <div className=\"acpt-card__header\">\n                            <div className=\"acpt-card__inner\">\n                                Your favourite ACPT Lite settings\n                            </div>\n                        </div>\n                        <div className=\"acpt-card__inner\">\n                            <fieldset>\n                                <legend>General settings</legend>\n                                <ReactSelect\n                                    id=\"language\"\n                                    label=\"Language\"\n                                    placeholder=\"Set the language of the plug-in\"\n                                    description=\"Set the language of the plug-in\"\n                                    control={control}\n                                    defaultValue={languageDefaultValue}\n                                    values={lanuagesList}\n                                    isRequired={true}\n                                    validate={{\n                                        required: \"This field is mandatory\"\n                                    }}\n                                />\n                                <InputNumber\n                                    id=\"records_per_page\"\n                                    label=\"Records per page\"\n                                    placeholder=\"Records per page in ACPT dashboards\"\n                                    defaultValue={perPageDefaultValue}\n                                    description=\"Set the number of records per page in your ACPT dashboards.\"\n                                    register={register}\n                                    errors={errors}\n                                    isRequired={true}\n                                    min={1}\n                                    max={200}\n                                />\n                            </fieldset>\n                            <fieldset>\n                                <legend>Danger zone</legend>\n                                <ReactSelect\n                                    id=\"delete_tables_when_deactivate\"\n                                    label=\"Delete ACPT definitions when deactivate the plug-in\"\n                                    placeholder=\"Delete ACPT definitions when deactivate the plug-in\"\n                                    description=\"Delete all saved ACPT definitions when you deactivate the plug-in. This means that if you select NO when you deactivate and then reactivate the plug-in you will find all the previously saved ACPT definitions (meta fields, options etc.)\"\n                                    control={control}\n                                    defaultValue={deleteDefinitionsDefaultValue}\n                                    values={yesOrNoList}\n                                    isRequired={true}\n                                    validate={{\n                                        required: \"This field is mandatory\"\n                                    }}\n                                />\n                                <ReactSelect\n                                    id=\"delete_posts\"\n                                    label=\"Delete posts when delete an ACPT post definition\"\n                                    placeholder=\"Delete posts when delete an ACPT post definition\"\n                                    description=\"Delete posts when delete an ACPT post type definition. This means that if you select YES, when you delete an ACPT post type definition all the saved posts will be deleted\"\n                                    control={control}\n                                    defaultValue={deletePostsDefaultValue}\n                                    values={yesOrNoList}\n                                    isRequired={true}\n                                    validate={{\n                                        required: \"This field is mandatory\"\n                                    }}\n                                />\n                                <ReactSelect\n                                    id=\"delete_metadata\"\n                                    label=\"Delete metadata when delete an ACPT field\"\n                                    placeholder=\"Delete post metadata when deleting ACPT fields\"\n                                    description=\"Delete post metadata when deleting an ACPT field. This means that if you select YES, when you delete an ACPT meta field all the saved metadata will be deleted\"\n                                    control={control}\n                                    defaultValue={deleteMetadataDefaultValue}\n                                    values={yesOrNoList}\n                                    isRequired={true}\n                                    validate={{\n                                        required: \"This field is mandatory\"\n                                    }}\n                                />\n                            </fieldset>\n                        </div>\n                    </div>\n                </main>\n            </form>\n        </Layout>\n    );\n};\n\nexport default Settings;","import React from 'react';\n\nconst InputNumber = ( {id, label, placeholder, validate, register, errors, min, max, step, isRequired, description, wizard}) => {\n\n    const error = errors[id];\n\n    return (\n        <div className=\"acpt-form-group\">\n            <div className=\"acpt-form-label-wrapper\">\n                <label htmlFor={id}>\n                    {label}\n                    {isRequired && (\n                        <span className=\"required\">*</span>\n                    )}\n                </label>\n                {wizard && (\n                    <span className=\"wizard\" dangerouslySetInnerHTML={{ __html: wizard }} />\n                )}\n            </div>\n            <div className=\"acpt-form-control-wrapper\">\n                <input\n                    id={id}\n                    name={id}\n                    type=\"number\"\n                    min={min ? min : 0}\n                    max={max}\n                    step={step ? min : 1}\n                    placeholder={placeholder}\n                    required={isRequired}\n                    aria-invalid={error ? \"true\" : \"false\"}\n                    className={`acpt-form-control ${error ? 'has-errors': ''}`}\n                    {...register(id, validate)}\n                />\n                {description && (\n                    <span className=\"description\">{description}</span>\n                )}\n                {error && <div className=\"invalid-feedback\">{error.message}</div>}\n            </div>\n        </div>\n    );\n};\n\nexport default InputNumber;\n\n","import Select from 'react-select';\nimport React from \"react\";\nimport {Controller} from \"react-hook-form\";\nimport {reactSelectStyles} from \"../../../constants/styles\";\n\nconst ReactSelect = ( {id, label, validate, control, values, defaultValue, isRequired, description, wizard}) => {\n\n    return (\n        <div className=\"acpt-form-group\">\n            <div className=\"acpt-form-label-wrapper\">\n                <label htmlFor={id}>\n                    {label}\n                    {isRequired && (\n                        <span className=\"required\">*</span>\n                    )}\n                </label>\n                {wizard && (\n                    <span className=\"wizard\" dangerouslySetInnerHTML={{ __html: wizard }} />\n                )}\n            </div>\n            <div className=\"acpt-form-control-wrapper\">\n                <Controller\n                    id={id}\n                    control={control}\n                    name={id}\n                    rules={validate}\n                    render={(\n                        {\n                            field: { onChange, onBlur, value, name, ref },\n                            fieldState: { invalid, isTouched, isDirty, error },\n                            formState,\n                        }\n                    ) => (\n                            <div>\n                                <Select\n                                    defaultValue={defaultValue}\n                                    styles={reactSelectStyles}\n                                    classNamePrefix=\"addl-class\"\n                                    onBlur={onBlur}\n                                    onChange={onChange}\n                                    checked={value}\n                                    inputRef={ref}\n                                    options={values}\n                                />\n                                {error && <div className=\"invalid-feedback\">{error.message}</div>}\n                            </div>\n                        )\n                    }\n                />\n                {description && (\n                    <span className=\"description\">{description}</span>\n                )}\n\n            </div>\n        </div>\n    );\n};\n\nexport default ReactSelect;","export const lanuagesList = [\n    { value: 'en', label: \"English\" },\n];","export const yesOrNoList = [\n    {label: \"Yes\", value: \"1\"},\n    {label: \"No\", value: \"0\"},\n];","import {wpAjaxRequest} from \"../../utils/ajax\";\nimport {saveSettingsFailure, saveSettingsInProgress, saveSettingsSuccess} from \"../actions/saveSettingsActions\";\n\nexport const saveSettings = (data) => async ( dispatch, getState) => {\n    try {\n        dispatch(saveSettingsInProgress());\n        const res = await wpAjaxRequest('saveSettingsAction', data );\n        (res.success === true) ? dispatch(saveSettingsSuccess(res.data)) : dispatch(saveSettingsFailure(res.error)) ;\n    } catch ( e ) {\n        dispatch(saveSettingsFailure(e));\n    }\n};","/**\n * Change document's <title>\n * @param title\n */\nexport const metaTitle = (title) => {\n    const originalDocumentTitle = document.title.split(\"‹\");\n    document.title = `${title} ‹ ${originalDocumentTitle[1]}`;\n};\n\n/**\n * Add current class to admin menu link\n * @param link\n */\nexport const changeCurrentAdminMenuLink = (link) => {\n\n    const menuWrapper = document.querySelector('#toplevel_page_advanced-custom-post-type-lite .wp-submenu');\n\n    menuWrapper.childNodes.forEach((currentValue, currentIndex, listObj) => {\n        const links = currentValue.getElementsByTagName('a');\n\n        for(let i = 0; i < links.length; i++) {\n            let elem = links[i];\n            let href = elem.getAttribute(\"href\");\n            let toCompare = 'admin.php?page=advanced-custom-post-type-lite'+link;\n\n            if( toCompare === href ){\n                currentValue.classList.add(\"current\");\n            } else {\n                currentValue.classList.remove(\"current\");\n            }\n        }\n    });\n};\n\nexport const refreshPage = (timeout = 0) => {\n    setTimeout(function () {\n        window.location.reload();\n    }, timeout);\n};"],"sourceRoot":""}