{"version":3,"sources":["webpack://advanced-custom-post-type-lite/./assets/src/App/components/reusable/Layout/Breadcrumbs/Breadcrumb.js","webpack://advanced-custom-post-type-lite/./assets/src/App/components/reusable/Layout/Breadcrumbs/index.js","webpack://advanced-custom-post-type-lite/./assets/src/App/components/reusable/Meta/index.js","webpack://advanced-custom-post-type-lite/./assets/src/App/components/reusable/MiniNavMap/MiniNavMapElement.js","webpack://advanced-custom-post-type-lite/./assets/src/App/components/reusable/MiniNavMap/index.js","webpack://advanced-custom-post-type-lite/./assets/src/App/hooks/useUnsavedChangesWarning.js","webpack://advanced-custom-post-type-lite/./assets/src/App/redux/thunks/deleteAllMeta.js","webpack://advanced-custom-post-type-lite/./assets/src/App/redux/thunks/fetchMeta.js","webpack://advanced-custom-post-type-lite/./assets/src/App/redux/thunks/metaSubmit.js","webpack://advanced-custom-post-type-lite/./assets/src/App/utils/misc.js","webpack://advanced-custom-post-type-lite/./assets/src/App/utils/scroll.js"],"names":["Breadcrumb","label","link","isLast","Breadcrumbs","crumbs","length","map","crumb","index","Meta","boxes","onSortEnd","values","dispatch","state","fetchMetaReducer","fetchedMeta","fetched","MiniNavMapElement","value","isActiveId","setActiveId","isClosed","setClosed","e","preventDefault","id","title","name","fields","field","parentId","MiniNavMap","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","threshold","document","getElementById","observe","useUnsavedChangesWarning","message","isDirty","setDirty","window","onbeforeunload","routerPrompt","deleteAllMeta","belongsTo","find","getState","res","success","error","console","log","fetchMeta","metaFieldId","metaSubmit","data","metaTitle","originalDocumentTitle","split","changeCurrentAdminMenuLink","menuWrapper","querySelector","childNodes","currentValue","currentIndex","listObj","links","getElementsByTagName","i","elem","href","getAttribute","toCompare","classList","add","remove","refreshPage","timeout","setTimeout","location","reload","scrollToTop","scrollTo","top","behavior","scrollToBottom","body","scrollHeight","scrollToTargetId","element","scrollIntoView","scrollToId","yOffset","y","getBoundingClientRect","pageYOffset"],"mappings":"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","file":"283.js","sourcesContent":["import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport {Icon} from \"@iconify/react\";\n\nconst Breadcrumb = ({label, link, isLast}) => {\n\n    return (\n        <React.Fragment>\n            <li className={isLast ? 'current' : ''}>\n                {link ?\n                    <Link to={link}>\n                        {label}\n                    </Link>\n                    :\n                    label\n                }\n            </li>\n            {!isLast && (\n                <span className=\"separator\">\n                    <Icon icon=\"bx:bx-chevron-right\" color=\"#aaa\" width=\"18px\" />\n                </span>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default Breadcrumb;","import React from 'react';\nimport Breadcrumb from \"./Breadcrumb\";\n\nconst Breadcrumbs = ({crumbs}) => {\n    return (\n        <div className=\"acpt-breadcrumbs\">\n            {crumbs.length > 0 && (\n                <ul>\n                    {crumbs.map((crumb, index) => (\n                        <Breadcrumb\n                            label={crumb.label}\n                            link={crumb.link}\n                            isLast={(index+1) === crumbs.length}\n                            key={index}\n                        />\n                    ))}\n                </ul>\n            )}\n        </div>\n    );\n};\n\nexport default Breadcrumbs;","import React from 'react';\nimport {SortableList} from \"../../reusable/Sortable\";\nimport MiniNavMap from \"../../reusable/MiniNavMap\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nconst Meta = ({boxes, onSortEnd, values}) => {\n\n    // manage global state\n    const dispatch = useDispatch();\n    const {fetched: fetchedMeta} = useSelector(state => state.fetchMetaReducer);\n\n    return (\n        <React.Fragment>\n            {boxes.length > 0\n                ? (\n                    <React.Fragment>\n                        <div className=\"acpt-meta-wrapper\">\n                            <div className=\"acpt-meta-list-wrapper\">\n                                <SortableList\n                                    items={boxes}\n                                    onSortEnd={onSortEnd}\n                                    useDragHandle\n                                    lockAxis=\"y\"\n                                    helperClass=\"dragging-helper-class\"\n                                    disableAutoscroll={false}\n                                    useWindowAsScrollContainer={true}\n                                />\n                            </div>\n                            <MiniNavMap values={values} />\n                        </div>\n                    </React.Fragment>\n                )\n                : (\n                    <React.Fragment>\n                        <div className=\"acpt-alert acpt-alert-warning\">\n                            No meta box already created. Create the first one now by clicking the button \"Add meta box\"!\n                        </div>\n                    </React.Fragment>\n                )\n            }\n        </React.Fragment>\n    );\n};\n\nexport default Meta;","import React, {useState} from 'react';\nimport {Icon} from \"@iconify/react\";\nimport {scrollToId} from \"../../../utils/scroll\";\n\nconst MiniNavMapElement = ( {value, isActiveId, setActiveId}) => {\n\n    const [isClosed, setClosed] = useState(false);\n\n    return (\n        <div className=\"mini-map-element\">\n            <div className=\"box\">\n                <a href=\"#\"\n                    onClick={e => {\n                        e.preventDefault();\n                        setClosed(!isClosed);\n                    }}\n                >\n                    <Icon icon={`bx:bx-chevron-${isClosed ? 'up' : 'down'}`} width=\"18px\"/>\n                </a>\n                <a\n                    href=\"#\"\n                    className={`title ${(isActiveId === value.id) ? 'active' : ''}`}\n                    onClick={e => {\n                    e.preventDefault();\n                    scrollToId(value.id);\n                    setActiveId(value.id);\n                }}>\n                    {value.title ? value.title : value.name }\n                </a>\n            </div>\n            {value.fields && value.fields.length > 0 && (\n                <ul className={isClosed ? 'closed' : 'open'}>\n                    {value.fields.map((field, index)=>{\n                        return (\n                            <li className={field.parentId ? 'is-child' : ''} key={index}>\n                                <a\n                                    href=\"#\"\n                                    className={(isActiveId === field.id) ? 'active' : ''}\n                                    onClick={e => {\n                                        e.preventDefault();\n                                        scrollToId(field.id);\n                                        setActiveId(value.id);\n                                    }}\n                                >\n                                    {field.name}\n                                </a>\n                            </li>\n                        );\n\n                    })}\n                </ul>\n            )}\n        </div>\n    );\n};\n\nexport default MiniNavMapElement;","import React, {useEffect, useState} from 'react';\nimport MiniNavMapElement from \"./MiniNavMapElement\";\n\nconst MiniNavMap = ({values}) => {\n\n    // manage local state\n    const [isActiveId, setActiveId] = useState(null);\n\n    if(values.length === 0){\n        return null;\n    }\n\n    // scroll handling\n    useEffect(() => {\n\n        const observer = new IntersectionObserver(function(entries) {\n            entries.forEach((entry)=>{\n                if(entry.isIntersecting === true){\n                    setActiveId(entry.target.id);\n                }\n            });\n        }, { threshold: [1] });\n\n        values.map((value)=>{\n            if(document.getElementById(value.id)){\n                observer.observe(document.getElementById(value.id));\n\n                value.fields && value.fields.map((field)=>{\n                    if(document.getElementById(field.id)){\n                        observer.observe(document.getElementById(field.id));\n                    }\n                });\n            }\n        });\n\n    }, []);\n\n    return (\n        <div className=\"acpt-mini-map\">\n            <h4>Quick navigation</h4>\n            {values.map((value, index) => (\n                <MiniNavMapElement\n                    value={value}\n                    key={index}\n                    isActiveId={isActiveId}\n                    setActiveId={setActiveId}\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default MiniNavMap;","import React, {useEffect, useState} from \"react\";\nimport {Prompt} from \"react-router-dom\";\n\nconst useUnsavedChangesWarning = ( message = \"Are you sure want to discard changes?\" ) => {\n\n    const [isDirty, setDirty] = useState(false);\n\n    useEffect(() => {\n        //Detecting browser closing\n        window.onbeforeunload = isDirty && (() => message);\n\n        return () => {\n            window.onbeforeunload = null;\n        };\n    }, [isDirty]);\n\n    const routerPrompt = <Prompt when={isDirty} message={message} />;\n\n    return [\n        routerPrompt,\n        () => setDirty(true),\n        () => setDirty(false),\n        isDirty\n    ];\n};\n\nexport default useUnsavedChangesWarning;","import {wpAjaxRequest} from \"../../utils/ajax\";\nimport {deleteAllFailure, deleteAllInProgress, deleteAllSuccess} from \"../actions/metaStateActions\";\n\nexport const deleteAllMeta = (belongsTo, find) => async (dispatch, getState) => {\n    try {\n        dispatch(deleteAllInProgress());\n        const res = await wpAjaxRequest(\"deleteMetaAction\", {belongsTo:belongsTo, find:find});\n        (res.success === true) ? dispatch(deleteAllSuccess()) : dispatch(deleteAllFailure(res.error)) ;\n    } catch (e) {\n        console.log(e);\n        dispatch(deleteAllFailure(e));\n    }\n};","import {wpAjaxRequest} from \"../../utils/ajax\";\nimport {fetchMetaFailure, fetchMetaInProgress, fetchMetaSuccess} from \"../actions/fetchMetaActions\";\nimport {hydrateValues} from \"../actions/metaStateActions\";\n\nexport const fetchMeta = (belongsTo, find, metaFieldId) => async (dispatch, getState) => {\n    try {\n        dispatch(fetchMetaInProgress());\n        const fetched = await wpAjaxRequest('fetchMetaAction', {belongsTo:belongsTo, find:find, metaFieldId:metaFieldId});\n        dispatch(fetchMetaSuccess(fetched));\n        dispatch(hydrateValues(fetched));\n    } catch ( e ) {\n        dispatch(fetchMetaFailure(e));\n    }\n};\n","import {wpAjaxRequest} from \"../../utils/ajax\";\nimport {submitFailure, submitInProgress, submitSuccess} from \"../actions/metaStateActions\";\n\nexport const metaSubmit = (data) => async (dispatch, getState) => {\n    try {\n        dispatch(submitInProgress());\n        const res = await wpAjaxRequest(\"saveMetaAction\", data);\n        (res.success === true) ? dispatch(submitSuccess()) : dispatch(submitFailure(res.error)) ;\n    } catch (e) {\n        console.log(e);\n        dispatch(submitFailure(e));\n    }\n};","/**\n * Change document's <title>\n * @param title\n */\nexport const metaTitle = (title) => {\n    const originalDocumentTitle = document.title.split(\"‹\");\n    document.title = `${title} ‹ ${originalDocumentTitle[1]}`;\n};\n\n/**\n * Add current class to admin menu link\n * @param link\n */\nexport const changeCurrentAdminMenuLink = (link) => {\n\n    const menuWrapper = document.querySelector('#toplevel_page_advanced-custom-post-type-lite .wp-submenu');\n\n    menuWrapper.childNodes.forEach((currentValue, currentIndex, listObj) => {\n        const links = currentValue.getElementsByTagName('a');\n\n        for(let i = 0; i < links.length; i++) {\n            let elem = links[i];\n            let href = elem.getAttribute(\"href\");\n            let toCompare = 'admin.php?page=advanced-custom-post-type-lite'+link;\n\n            if( toCompare === href ){\n                currentValue.classList.add(\"current\");\n            } else {\n                currentValue.classList.remove(\"current\");\n            }\n        }\n    });\n};\n\nexport const refreshPage = (timeout = 0) => {\n    setTimeout(function () {\n        window.location.reload();\n    }, timeout);\n};","\nexport const scrollToTop = () => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n};\n\nexport const scrollToBottom = () => {\n    window.scrollTo({ top: (document.body.scrollHeight + 120), behavior: 'smooth' })\n};\n\nexport const scrollToTargetId = (id) => {\n    const element = document.getElementById(id);\n    element.scrollIntoView({behavior: 'smooth'}, true);\n};\n\nexport const scrollToId = (id, yOffset = -130) => {\n\n    const element = document.getElementById(id);\n    const y = element.getBoundingClientRect().top + window.pageYOffset + yOffset;\n\n    window.scrollTo({top: y, behavior: 'smooth'});\n};"],"sourceRoot":""}